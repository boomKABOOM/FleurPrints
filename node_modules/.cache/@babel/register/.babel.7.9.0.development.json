{
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/helpers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst path = require('path');\n\nconst fs = Promise.promisifyAll(require('fs'));\n\nconst colors = require('colors');\n\nconst inquirer = Promise.promisifyAll(require('inquirer'));\n\nconst moment = require('moment');\n\nconst context = require('./context.js');\n\nconst loadConfig = async function () {\n  let config;\n\n  try {\n    config = await fs.readFileAsync(path.join(process.cwd(), 'quickshot.json'), 'utf8');\n  } catch (err) {\n    throw new Error('Shop configuration is missing, have you run \\'quickshot configure\\'?');\n  }\n\n  try {\n    config = JSON.parse(config);\n  } catch (err) {\n    throw new Error('Shop configuration is corrupt, you may need to delete \\'quickshot.json\\', and run \\'quickshot config\\' again.');\n  }\n\n  if (!config.configVersion || config.configVersion < context.configVersion) {\n    throw new Error('Shop configuration is from an older incompatible version of quickshot. You need to backup/remove your existing \\'quickshot.json\\', and run \\'quickshot config\\' again.');\n  }\n\n  Object.assign(context.config, config);\n  return config;\n};\n\nconst getTarget = async function (config, argv) {\n  const targetName = argv.target || null;\n  let target = null;\n\n  if (_.isArray(config.targets)) {\n    if (targetName) {\n      target = _.find(config.targets, {\n        name: targetName\n      });\n\n      if (!target) {\n        throw new Error(`Could not find target '${targetName}'`);\n      }\n    } else {\n      const targetChoices = config.targets.map(function (target) {\n        const urlObj = new URL(target.url);\n        return `[${target.name}] - '${target.theme_name}' @ ${urlObj.host}`;\n      });\n\n      if (config.targets.length > 1) {\n        const choice = await inquirer.prompt([{\n          type: 'list',\n          name: 'target',\n          message: 'Select target',\n          default: null,\n          choices: targetChoices\n        }]);\n        target = config.targets[_.indexOf(targetChoices, choice.target)];\n      } else if (config.targets.length === 1) {\n        target = _.first(config.targets);\n      }\n    }\n  } else {\n    throw new Error('No targets configured! Run \\'quickshot configure\\' and create a new target.');\n  } // target.auth = 'Basic ' + new Buffer(`${target.api_key}:${target.password}`).toString('base64')\n\n\n  return target;\n};\n\nconst ts = function () {\n  return moment().format('hh:mm:ss a');\n};\n\nconst log = function (content, color = 'white') {\n  let data = null;\n  let message = null;\n\n  if (_.isError(content)) {\n    message = content;\n    data = content;\n  } else if (_.isObject(content)) {\n    if (content.message) {\n      message = content.message;\n    }\n\n    if (content.data) {\n      data = content.data;\n    } else {\n      data = content;\n    }\n  } else {\n    message = content;\n  }\n\n  if (message) {\n    console.log(colors[color](`${ts()} - ${message}`));\n  }\n\n  if (data) {\n    console.log(colors[color]('=== START OF OUTPUT ==='));\n    console.dir(data, {\n      depth: null\n    });\n    console.log(colors[color]('==== END OF OUTPUT ===='));\n  }\n};\n\nconst to = function (promise) {\n  return promise.then(function (val) {\n    return val;\n  }).catch(function (err) {\n    err.isError = true;\n    return err;\n  });\n};\n\nconst mkdir = async function (path) {\n  try {\n    await fs.mkdirAsync(path, {\n      recursive: true\n    });\n  } catch (err) {\n    if (err.code !== 'EEXIST') {\n      throw err;\n    }\n  }\n};\n\nconst stringifyPage = function (page) {\n  const frontMatter = JSON.stringify(_.omit(page, 'body_html'), null, 2);\n  const res = [];\n  res.push('<!--START-FRONT-MATTER');\n  res.push(frontMatter);\n  res.push('END-FRONT-MATTER-->');\n  res.push(page.body_html);\n  return res.join('\\n');\n};\n\nconst parsePage = function (source) {\n  let [frontMatter, body] = source.split('END-FRONT-MATTER-->');\n  frontMatter = frontMatter.replace('<!--START-FRONT-MATTER', '');\n  const data = JSON.parse(frontMatter);\n  data.body_html = body.trim();\n  return data;\n};\n\nmodule.exports = {\n  loadConfig,\n  getTarget,\n  mkdir,\n  log,\n  to,\n  stringifyPage,\n  parsePage\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJQcm9taXNlIiwicGF0aCIsImZzIiwicHJvbWlzaWZ5QWxsIiwiY29sb3JzIiwiaW5xdWlyZXIiLCJtb21lbnQiLCJjb250ZXh0IiwibG9hZENvbmZpZyIsImNvbmZpZyIsInJlYWRGaWxlQXN5bmMiLCJqb2luIiwicHJvY2VzcyIsImN3ZCIsImVyciIsIkVycm9yIiwiSlNPTiIsInBhcnNlIiwiY29uZmlnVmVyc2lvbiIsIk9iamVjdCIsImFzc2lnbiIsImdldFRhcmdldCIsImFyZ3YiLCJ0YXJnZXROYW1lIiwidGFyZ2V0IiwiaXNBcnJheSIsInRhcmdldHMiLCJmaW5kIiwibmFtZSIsInRhcmdldENob2ljZXMiLCJtYXAiLCJ1cmxPYmoiLCJVUkwiLCJ1cmwiLCJ0aGVtZV9uYW1lIiwiaG9zdCIsImxlbmd0aCIsImNob2ljZSIsInByb21wdCIsInR5cGUiLCJtZXNzYWdlIiwiZGVmYXVsdCIsImNob2ljZXMiLCJpbmRleE9mIiwiZmlyc3QiLCJ0cyIsImZvcm1hdCIsImxvZyIsImNvbnRlbnQiLCJjb2xvciIsImRhdGEiLCJpc0Vycm9yIiwiaXNPYmplY3QiLCJjb25zb2xlIiwiZGlyIiwiZGVwdGgiLCJ0byIsInByb21pc2UiLCJ0aGVuIiwidmFsIiwiY2F0Y2giLCJta2RpciIsIm1rZGlyQXN5bmMiLCJyZWN1cnNpdmUiLCJjb2RlIiwic3RyaW5naWZ5UGFnZSIsInBhZ2UiLCJmcm9udE1hdHRlciIsInN0cmluZ2lmeSIsIm9taXQiLCJyZXMiLCJwdXNoIiwiYm9keV9odG1sIiwicGFyc2VQYWdlIiwic291cmNlIiwiYm9keSIsInNwbGl0IiwicmVwbGFjZSIsInRyaW0iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBLE1BQU1BLENBQUMsR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBakI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF2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QUFBQSxVQURlO0FBRWZhLEVBQUFBLFNBRmU7QUFHZndDLEVBQUFBLEtBSGU7QUFJZmQsRUFBQUEsR0FKZTtBQUtmUyxFQUFBQSxFQUxlO0FBTWZTLEVBQUFBLGFBTmU7QUFPZlEsRUFBQUE7QUFQZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvcXVpY2tzaG90L3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKVxuY29uc3QgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IGZzID0gUHJvbWlzZS5wcm9taXNpZnlBbGwocmVxdWlyZSgnZnMnKSlcbmNvbnN0IGNvbG9ycyA9IHJlcXVpcmUoJ2NvbG9ycycpXG5jb25zdCBpbnF1aXJlciA9IFByb21pc2UucHJvbWlzaWZ5QWxsKHJlcXVpcmUoJ2lucXVpcmVyJykpXG5jb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKVxuY29uc3QgY29udGV4dCA9IHJlcXVpcmUoJy4vY29udGV4dC5qcycpXG5cbmNvbnN0IGxvYWRDb25maWcgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGxldCBjb25maWdcblxuICB0cnkge1xuICAgIGNvbmZpZyA9IGF3YWl0IGZzLnJlYWRGaWxlQXN5bmMocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdxdWlja3Nob3QuanNvbicpLCAndXRmOCcpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHRocm93IG5ldyBFcnJvcignU2hvcCBjb25maWd1cmF0aW9uIGlzIG1pc3NpbmcsIGhhdmUgeW91IHJ1biBcXCdxdWlja3Nob3QgY29uZmlndXJlXFwnPycpXG4gIH1cblxuICB0cnkge1xuICAgIGNvbmZpZyA9IEpTT04ucGFyc2UoY29uZmlnKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Nob3AgY29uZmlndXJhdGlvbiBpcyBjb3JydXB0LCB5b3UgbWF5IG5lZWQgdG8gZGVsZXRlIFxcJ3F1aWNrc2hvdC5qc29uXFwnLCBhbmQgcnVuIFxcJ3F1aWNrc2hvdCBjb25maWdcXCcgYWdhaW4uJylcbiAgfVxuXG4gIGlmICghY29uZmlnLmNvbmZpZ1ZlcnNpb24gfHwgY29uZmlnLmNvbmZpZ1ZlcnNpb24gPCBjb250ZXh0LmNvbmZpZ1ZlcnNpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Nob3AgY29uZmlndXJhdGlvbiBpcyBmcm9tIGFuIG9sZGVyIGluY29tcGF0aWJsZSB2ZXJzaW9uIG9mIHF1aWNrc2hvdC4gWW91IG5lZWQgdG8gYmFja3VwL3JlbW92ZSB5b3VyIGV4aXN0aW5nIFxcJ3F1aWNrc2hvdC5qc29uXFwnLCBhbmQgcnVuIFxcJ3F1aWNrc2hvdCBjb25maWdcXCcgYWdhaW4uJylcbiAgfVxuXG4gIE9iamVjdC5hc3NpZ24oY29udGV4dC5jb25maWcsIGNvbmZpZylcblxuICByZXR1cm4gY29uZmlnXG59XG5cbmNvbnN0IGdldFRhcmdldCA9IGFzeW5jIGZ1bmN0aW9uIChjb25maWcsIGFyZ3YpIHtcbiAgY29uc3QgdGFyZ2V0TmFtZSA9IGFyZ3YudGFyZ2V0IHx8IG51bGxcblxuICBsZXQgdGFyZ2V0ID0gbnVsbFxuICBpZiAoXy5pc0FycmF5KGNvbmZpZy50YXJnZXRzKSkge1xuICAgIGlmICh0YXJnZXROYW1lKSB7XG4gICAgICB0YXJnZXQgPSBfLmZpbmQoY29uZmlnLnRhcmdldHMsIHsgbmFtZTogdGFyZ2V0TmFtZSB9KVxuICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgZmluZCB0YXJnZXQgJyR7dGFyZ2V0TmFtZX0nYClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdGFyZ2V0Q2hvaWNlcyA9IGNvbmZpZy50YXJnZXRzLm1hcChmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgICAgIGNvbnN0IHVybE9iaiA9IG5ldyBVUkwodGFyZ2V0LnVybClcbiAgICAgICAgcmV0dXJuIGBbJHt0YXJnZXQubmFtZX1dIC0gJyR7dGFyZ2V0LnRoZW1lX25hbWV9JyBAICR7dXJsT2JqLmhvc3R9YFxuICAgICAgfSlcbiAgICAgIGlmIChjb25maWcudGFyZ2V0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGNvbnN0IGNob2ljZSA9IGF3YWl0IGlucXVpcmVyLnByb21wdChbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2xpc3QnLFxuICAgICAgICAgICAgbmFtZTogJ3RhcmdldCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnU2VsZWN0IHRhcmdldCcsXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgY2hvaWNlczogdGFyZ2V0Q2hvaWNlc1xuICAgICAgICAgIH1cbiAgICAgICAgXSlcbiAgICAgICAgdGFyZ2V0ID0gY29uZmlnLnRhcmdldHNbXy5pbmRleE9mKHRhcmdldENob2ljZXMsIGNob2ljZS50YXJnZXQpXVxuICAgICAgfSBlbHNlIGlmIChjb25maWcudGFyZ2V0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgdGFyZ2V0ID0gXy5maXJzdChjb25maWcudGFyZ2V0cylcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyB0YXJnZXRzIGNvbmZpZ3VyZWQhIFJ1biBcXCdxdWlja3Nob3QgY29uZmlndXJlXFwnIGFuZCBjcmVhdGUgYSBuZXcgdGFyZ2V0LicpXG4gIH1cblxuICAvLyB0YXJnZXQuYXV0aCA9ICdCYXNpYyAnICsgbmV3IEJ1ZmZlcihgJHt0YXJnZXQuYXBpX2tleX06JHt0YXJnZXQucGFzc3dvcmR9YCkudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gIHJldHVybiB0YXJnZXRcbn1cblxuY29uc3QgdHMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBtb21lbnQoKS5mb3JtYXQoJ2hoOm1tOnNzIGEnKVxufVxuXG5jb25zdCBsb2cgPSBmdW5jdGlvbiAoY29udGVudCwgY29sb3IgPSAnd2hpdGUnKSB7XG4gIGxldCBkYXRhID0gbnVsbFxuICBsZXQgbWVzc2FnZSA9IG51bGxcblxuICBpZiAoXy5pc0Vycm9yKGNvbnRlbnQpKSB7XG4gICAgbWVzc2FnZSA9IGNvbnRlbnRcbiAgICBkYXRhID0gY29udGVudFxuICB9IGVsc2UgaWYgKF8uaXNPYmplY3QoY29udGVudCkpIHtcbiAgICBpZiAoY29udGVudC5tZXNzYWdlKSB7XG4gICAgICBtZXNzYWdlID0gY29udGVudC5tZXNzYWdlXG4gICAgfVxuICAgIGlmIChjb250ZW50LmRhdGEpIHtcbiAgICAgIGRhdGEgPSBjb250ZW50LmRhdGFcbiAgICB9IGVsc2Uge1xuICAgICAgZGF0YSA9IGNvbnRlbnRcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbWVzc2FnZSA9IGNvbnRlbnRcbiAgfVxuXG4gIGlmIChtZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2coY29sb3JzW2NvbG9yXShgJHt0cygpfSAtICR7bWVzc2FnZX1gKSlcbiAgfVxuXG4gIGlmIChkYXRhKSB7XG4gICAgY29uc29sZS5sb2coY29sb3JzW2NvbG9yXSgnPT09IFNUQVJUIE9GIE9VVFBVVCA9PT0nKSlcbiAgICBjb25zb2xlLmRpcihkYXRhLCB7IGRlcHRoOiBudWxsIH0pXG4gICAgY29uc29sZS5sb2coY29sb3JzW2NvbG9yXSgnPT09PSBFTkQgT0YgT1VUUFVUID09PT0nKSlcbiAgfVxufVxuXG5jb25zdCB0byA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHJldHVybiBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuICAgIHJldHVybiB2YWxcbiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgIGVyci5pc0Vycm9yID0gdHJ1ZVxuICAgIHJldHVybiBlcnJcbiAgfSlcbn1cblxuY29uc3QgbWtkaXIgPSBhc3luYyBmdW5jdGlvbiAocGF0aCkge1xuICB0cnkge1xuICAgIGF3YWl0IGZzLm1rZGlyQXN5bmMocGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyci5jb2RlICE9PSAnRUVYSVNUJykge1xuICAgICAgdGhyb3cgZXJyXG4gICAgfVxuICB9XG59XG5cbmNvbnN0IHN0cmluZ2lmeVBhZ2UgPSBmdW5jdGlvbiAocGFnZSkge1xuICBjb25zdCBmcm9udE1hdHRlciA9IEpTT04uc3RyaW5naWZ5KF8ub21pdChwYWdlLCAnYm9keV9odG1sJyksIG51bGwsIDIpXG4gIGNvbnN0IHJlcyA9IFtdXG4gIHJlcy5wdXNoKCc8IS0tU1RBUlQtRlJPTlQtTUFUVEVSJylcbiAgcmVzLnB1c2goZnJvbnRNYXR0ZXIpXG4gIHJlcy5wdXNoKCdFTkQtRlJPTlQtTUFUVEVSLS0+JylcbiAgcmVzLnB1c2gocGFnZS5ib2R5X2h0bWwpXG4gIHJldHVybiByZXMuam9pbignXFxuJylcbn1cblxuY29uc3QgcGFyc2VQYWdlID0gZnVuY3Rpb24gKHNvdXJjZSkge1xuICBsZXQgW2Zyb250TWF0dGVyLCBib2R5XSA9IHNvdXJjZS5zcGxpdCgnRU5ELUZST05ULU1BVFRFUi0tPicpXG4gIGZyb250TWF0dGVyID0gZnJvbnRNYXR0ZXIucmVwbGFjZSgnPCEtLVNUQVJULUZST05ULU1BVFRFUicsICcnKVxuICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShmcm9udE1hdHRlcilcbiAgZGF0YS5ib2R5X2h0bWwgPSBib2R5LnRyaW0oKVxuICByZXR1cm4gZGF0YVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbG9hZENvbmZpZyxcbiAgZ2V0VGFyZ2V0LFxuICBta2RpcixcbiAgbG9nLFxuICB0byxcbiAgc3RyaW5naWZ5UGFnZSxcbiAgcGFyc2VQYWdlXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "path",
        "fs",
        "promisifyAll",
        "colors",
        "inquirer",
        "moment",
        "context",
        "loadConfig",
        "config",
        "readFileAsync",
        "join",
        "process",
        "cwd",
        "err",
        "Error",
        "JSON",
        "parse",
        "configVersion",
        "Object",
        "assign",
        "getTarget",
        "argv",
        "targetName",
        "target",
        "isArray",
        "targets",
        "find",
        "name",
        "targetChoices",
        "map",
        "urlObj",
        "URL",
        "url",
        "theme_name",
        "host",
        "length",
        "choice",
        "prompt",
        "type",
        "message",
        "default",
        "choices",
        "indexOf",
        "first",
        "ts",
        "format",
        "log",
        "content",
        "color",
        "data",
        "isError",
        "isObject",
        "console",
        "dir",
        "depth",
        "to",
        "promise",
        "then",
        "val",
        "catch",
        "mkdir",
        "mkdirAsync",
        "recursive",
        "code",
        "stringifyPage",
        "page",
        "frontMatter",
        "stringify",
        "omit",
        "res",
        "push",
        "body_html",
        "parsePage",
        "source",
        "body",
        "split",
        "replace",
        "trim",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst path = require('path')\nconst fs = Promise.promisifyAll(require('fs'))\nconst colors = require('colors')\nconst inquirer = Promise.promisifyAll(require('inquirer'))\nconst moment = require('moment')\nconst context = require('./context.js')\n\nconst loadConfig = async function () {\n  let config\n\n  try {\n    config = await fs.readFileAsync(path.join(process.cwd(), 'quickshot.json'), 'utf8')\n  } catch (err) {\n    throw new Error('Shop configuration is missing, have you run \\'quickshot configure\\'?')\n  }\n\n  try {\n    config = JSON.parse(config)\n  } catch (err) {\n    throw new Error('Shop configuration is corrupt, you may need to delete \\'quickshot.json\\', and run \\'quickshot config\\' again.')\n  }\n\n  if (!config.configVersion || config.configVersion < context.configVersion) {\n    throw new Error('Shop configuration is from an older incompatible version of quickshot. You need to backup/remove your existing \\'quickshot.json\\', and run \\'quickshot config\\' again.')\n  }\n\n  Object.assign(context.config, config)\n\n  return config\n}\n\nconst getTarget = async function (config, argv) {\n  const targetName = argv.target || null\n\n  let target = null\n  if (_.isArray(config.targets)) {\n    if (targetName) {\n      target = _.find(config.targets, { name: targetName })\n      if (!target) {\n        throw new Error(`Could not find target '${targetName}'`)\n      }\n    } else {\n      const targetChoices = config.targets.map(function (target) {\n        const urlObj = new URL(target.url)\n        return `[${target.name}] - '${target.theme_name}' @ ${urlObj.host}`\n      })\n      if (config.targets.length > 1) {\n        const choice = await inquirer.prompt([\n          {\n            type: 'list',\n            name: 'target',\n            message: 'Select target',\n            default: null,\n            choices: targetChoices\n          }\n        ])\n        target = config.targets[_.indexOf(targetChoices, choice.target)]\n      } else if (config.targets.length === 1) {\n        target = _.first(config.targets)\n      }\n    }\n  } else {\n    throw new Error('No targets configured! Run \\'quickshot configure\\' and create a new target.')\n  }\n\n  // target.auth = 'Basic ' + new Buffer(`${target.api_key}:${target.password}`).toString('base64')\n  return target\n}\n\nconst ts = function () {\n  return moment().format('hh:mm:ss a')\n}\n\nconst log = function (content, color = 'white') {\n  let data = null\n  let message = null\n\n  if (_.isError(content)) {\n    message = content\n    data = content\n  } else if (_.isObject(content)) {\n    if (content.message) {\n      message = content.message\n    }\n    if (content.data) {\n      data = content.data\n    } else {\n      data = content\n    }\n  } else {\n    message = content\n  }\n\n  if (message) {\n    console.log(colors[color](`${ts()} - ${message}`))\n  }\n\n  if (data) {\n    console.log(colors[color]('=== START OF OUTPUT ==='))\n    console.dir(data, { depth: null })\n    console.log(colors[color]('==== END OF OUTPUT ===='))\n  }\n}\n\nconst to = function (promise) {\n  return promise.then(function (val) {\n    return val\n  }).catch(function (err) {\n    err.isError = true\n    return err\n  })\n}\n\nconst mkdir = async function (path) {\n  try {\n    await fs.mkdirAsync(path, { recursive: true })\n  } catch (err) {\n    if (err.code !== 'EEXIST') {\n      throw err\n    }\n  }\n}\n\nconst stringifyPage = function (page) {\n  const frontMatter = JSON.stringify(_.omit(page, 'body_html'), null, 2)\n  const res = []\n  res.push('<!--START-FRONT-MATTER')\n  res.push(frontMatter)\n  res.push('END-FRONT-MATTER-->')\n  res.push(page.body_html)\n  return res.join('\\n')\n}\n\nconst parsePage = function (source) {\n  let [frontMatter, body] = source.split('END-FRONT-MATTER-->')\n  frontMatter = frontMatter.replace('<!--START-FRONT-MATTER', '')\n  const data = JSON.parse(frontMatter)\n  data.body_html = body.trim()\n  return data\n}\n\nmodule.exports = {\n  loadConfig,\n  getTarget,\n  mkdir,\n  log,\n  to,\n  stringifyPage,\n  parsePage\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578109640000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/context.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/context.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/context.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/context.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
        "sourceFileName": "context.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst context = {\n  initialized: false,\n  configVersion: 2,\n  apiVersion: '2020-01',\n  config: {}\n};\nmodule.exports = context;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRleHQuanMiXSwibmFtZXMiOlsiY29udGV4dCIsImluaXRpYWxpemVkIiwiY29uZmlnVmVyc2lvbiIsImFwaVZlcnNpb24iLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBLE1BQU1BLE9BQU8sR0FBRztBQUNkQyxFQUFBQSxXQUFXLEVBQUUsS0FEQztBQUVkQyxFQUFBQSxhQUFhLEVBQUUsQ0FGRDtBQUdkQyxFQUFBQSxVQUFVLEVBQUUsU0FIRTtBQUlkQyxFQUFBQSxNQUFNLEVBQUU7QUFKTSxDQUFoQjtBQU9BQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJOLE9BQWpCIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9xdWlja3Nob3Qvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY29udGV4dCA9IHtcbiAgaW5pdGlhbGl6ZWQ6IGZhbHNlLFxuICBjb25maWdWZXJzaW9uOiAyLFxuICBhcGlWZXJzaW9uOiAnMjAyMC0wMScsXG4gIGNvbmZpZzoge31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZXh0XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "context.js"
      ],
      "names": [
        "context",
        "initialized",
        "configVersion",
        "apiVersion",
        "config",
        "module",
        "exports"
      ],
      "mappings": ";;AACA,MAAMA,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,KADC;AAEdC,EAAAA,aAAa,EAAE,CAFD;AAGdC,EAAAA,UAAU,EAAE,SAHE;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAhB;AAOAC,MAAM,CAACC,OAAP,GAAiBN,OAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "sourcesContent": [
        "\nconst context = {\n  initialized: false,\n  configVersion: 2,\n  apiVersion: '2020-01',\n  config: {}\n}\n\nmodule.exports = context\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578097090000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/config/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/config/targets.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/config/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/config/targets.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/config/targets.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/config/targets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/config/",
        "sourceFileName": "targets.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst {\n  log\n} = require('../../helpers.js');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify.js');\n\nconst inquirer = Promise.promisifyAll(require('inquirer'));\n\nmodule.exports = async function (config) {\n  let choice = {};\n\n  while (choice.action !== '< Go Back') {\n    const actionOpts = ['Create target'];\n\n    if (config.targets.length > 0) {\n      actionOpts.push('Edit target');\n      actionOpts.push('Delete target');\n      actionOpts.push('List targets');\n    }\n\n    actionOpts.push('< Go Back');\n    choice = await inquirer.prompt([{\n      type: 'list',\n      name: 'action',\n      message: 'Manage targets',\n      choices: actionOpts\n    }]);\n    const targetChoices = config.targets.map(function (target) {\n      const urlObj = new URL(target.url);\n      return `[${target.name}] - '${target.theme_name}' @ ${urlObj.host}`;\n    });\n\n    if (['Create target', 'Edit target'].includes(choice.action)) {\n      let currTarget = {};\n      let editIndex;\n\n      if (choice.action === 'Edit target') {\n        const targetChoice = await inquirer.prompt([{\n          type: 'list',\n          name: 'target',\n          message: 'Select target to edit',\n          default: null,\n          choices: targetChoices\n        }]);\n        editIndex = _.indexOf(targetChoices, targetChoice.target);\n        currTarget = config.targets[editIndex];\n      }\n\n      const targetSettings = await inquirer.prompt([{\n        type: 'input',\n        name: 'name',\n        message: 'Enter a name for this target',\n        default: currTarget.name || null\n      }, {\n        type: 'input',\n        name: 'url',\n        message: 'Store URL? (Copy and paste the full \"example URL\" from the private app settings).',\n        default: currTarget.url || null\n      }]);\n      currTarget = Object.assign(currTarget, targetSettings);\n      const urlObj = new URL(currTarget.url);\n\n      const pathParts = _.take(_.compact(urlObj.pathname.split('/')), 2).join('/');\n\n      currTarget.url = urlObj.protocol + '//' + urlObj.username + ':' + urlObj.password + '@' + urlObj.host + '/' + pathParts;\n      const res = await requestify(currTarget, {\n        method: 'get',\n        url: '/themes.json'\n      });\n\n      const themes = _.get(res, 'body.themes');\n\n      let defaultTheme = _.find(themes, {\n        id: currTarget.theme_id\n      });\n\n      if (defaultTheme) {\n        defaultTheme = `${defaultTheme.name} (${defaultTheme.role})`;\n      }\n\n      const themeChoices = themes.map(theme => `${theme.name} (${theme.role})`);\n      const themeChoice = await inquirer.prompt([{\n        type: 'list',\n        name: 'theme',\n        message: 'Select theme',\n        default: defaultTheme || null,\n        choices: themeChoices\n      }]);\n\n      const theme = themes[_.indexOf(themeChoices, themeChoice.theme)];\n\n      currTarget.theme_name = theme.name;\n      currTarget.theme_id = theme.id;\n\n      if (isFinite(editIndex) && editIndex !== -1) {\n        config.targets[editIndex] = currTarget;\n        log('Target Modified!\\n\\n', 'yellow');\n      } else {\n        config.targets.push(currTarget);\n        log('Target Created!\\n\\n', 'yellow');\n      }\n    } else if (choice.action === 'Delete target') {\n      const targetChoice = await inquirer.prompt([{\n        type: 'list',\n        name: 'target',\n        message: 'Select target to edit',\n        default: null,\n        choices: targetChoices\n      }]);\n\n      const editIndex = _.indexOf(targetChoices, targetChoice.target);\n\n      config.targets.splice(editIndex, 1);\n    } else if (choice.action === 'List targets') {\n      console.log('');\n      targetChoices.forEach(function (target) {\n        log(target, 'cyan');\n      });\n      console.log('');\n    }\n  }\n\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "targets.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "log",
        "fs",
        "promisifyAll",
        "requestify",
        "inquirer",
        "module",
        "exports",
        "config",
        "choice",
        "action",
        "actionOpts",
        "targets",
        "length",
        "push",
        "prompt",
        "type",
        "name",
        "message",
        "choices",
        "targetChoices",
        "map",
        "target",
        "urlObj",
        "URL",
        "url",
        "theme_name",
        "host",
        "includes",
        "currTarget",
        "editIndex",
        "targetChoice",
        "default",
        "indexOf",
        "targetSettings",
        "Object",
        "assign",
        "pathParts",
        "take",
        "compact",
        "pathname",
        "split",
        "join",
        "protocol",
        "username",
        "password",
        "res",
        "method",
        "themes",
        "get",
        "defaultTheme",
        "find",
        "id",
        "theme_id",
        "role",
        "themeChoices",
        "theme",
        "themeChoice",
        "isFinite",
        "splice",
        "console",
        "forEach"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/config/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst { log } = require('../../helpers.js')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify.js')\nconst inquirer = Promise.promisifyAll(require('inquirer'))\n\nmodule.exports = async function (config) {\n  let choice = {}\n\n  while (choice.action !== '< Go Back') {\n    const actionOpts = ['Create target']\n\n    if (config.targets.length > 0) {\n      actionOpts.push('Edit target')\n      actionOpts.push('Delete target')\n      actionOpts.push('List targets')\n    }\n\n    actionOpts.push('< Go Back')\n\n    choice = await inquirer.prompt([{\n      type: 'list',\n      name: 'action',\n      message: 'Manage targets',\n      choices: actionOpts\n    }])\n\n    const targetChoices = config.targets.map(function (target) {\n      const urlObj = new URL(target.url)\n      return `[${target.name}] - '${target.theme_name}' @ ${urlObj.host}`\n    })\n\n    if (['Create target', 'Edit target'].includes(choice.action)) {\n      let currTarget = {}\n      let editIndex\n\n      if (choice.action === 'Edit target') {\n        const targetChoice = await inquirer.prompt([{\n          type: 'list',\n          name: 'target',\n          message: 'Select target to edit',\n          default: null,\n          choices: targetChoices\n        }])\n        editIndex = _.indexOf(targetChoices, targetChoice.target)\n        currTarget = config.targets[editIndex]\n      }\n\n      const targetSettings = await inquirer.prompt([\n        {\n          type: 'input',\n          name: 'name',\n          message: 'Enter a name for this target',\n          default: (currTarget.name || null)\n        },\n        {\n          type: 'input',\n          name: 'url',\n          message: 'Store URL? (Copy and paste the full \"example URL\" from the private app settings).',\n          default: (currTarget.url || null)\n        }\n      ])\n\n      currTarget = Object.assign(currTarget, targetSettings)\n\n      const urlObj = new URL(currTarget.url)\n      const pathParts = _.take(_.compact(urlObj.pathname.split('/')), 2).join('/')\n\n      currTarget.url = urlObj.protocol + '//' + urlObj.username + ':' + urlObj.password + '@' + urlObj.host + '/' + pathParts\n\n      const res = await requestify(currTarget, {\n        method: 'get',\n        url: '/themes.json'\n      })\n      const themes = _.get(res, 'body.themes')\n\n      let defaultTheme = _.find(themes, { id: currTarget.theme_id })\n      if (defaultTheme) { defaultTheme = `${defaultTheme.name} (${defaultTheme.role})` }\n      const themeChoices = themes.map(theme => `${theme.name} (${theme.role})`)\n\n      const themeChoice = await inquirer.prompt([{\n        type: 'list',\n        name: 'theme',\n        message: 'Select theme',\n        default: defaultTheme || null,\n        choices: themeChoices\n      }])\n\n      const theme = themes[_.indexOf(themeChoices, themeChoice.theme)]\n      currTarget.theme_name = theme.name\n      currTarget.theme_id = theme.id\n\n      if (isFinite(editIndex) && editIndex !== -1) {\n        config.targets[editIndex] = currTarget\n        log('Target Modified!\\n\\n', 'yellow')\n      } else {\n        config.targets.push(currTarget)\n        log('Target Created!\\n\\n', 'yellow')\n      }\n    } else if (choice.action === 'Delete target') {\n      const targetChoice = await inquirer.prompt([{\n        type: 'list',\n        name: 'target',\n        message: 'Select target to edit',\n        default: null,\n        choices: targetChoices\n      }])\n      const editIndex = _.indexOf(targetChoices, targetChoice.target)\n      config.targets.splice(editIndex, 1)\n    } else if (choice.action === 'List targets') {\n      console.log('')\n      targetChoices.forEach(function (target) {\n        log(target, 'cyan')\n      })\n      console.log('')\n    }\n  }\n\n  return config\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578097592000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/requestify.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/requestify.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/requestify.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/requestify.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
        "sourceFileName": "requestify.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst Promise = require('bluebird');\n\nconst rp = require('request-promise');\n\nconst _ = require('lodash');\n\nconst {\n  log,\n  to\n} = require('./helpers');\n\nconst context = require('./context');\n\nconst queues = {};\n\nconst createQueue = function () {\n  let isProcessing = false;\n  let inFlight = 0;\n  let rate = 0;\n  let max = 5;\n  const list = [];\n\n  const add = async function (target, spec) {\n    return new Promise((resolve, reject) => {\n      list.push({\n        target,\n        spec,\n        resolve,\n        reject\n      });\n\n      if (!isProcessing) {\n        process();\n      }\n    });\n  };\n\n  const process = async function () {\n    isProcessing = true;\n\n    while (list.length > 0) {\n      const req = list.shift();\n      let headroom = max - (rate + inFlight);\n\n      if (headroom <= 0) {\n        headroom = 0;\n      }\n\n      let exponent = headroom * headroom;\n\n      if (exponent <= 0.9) {\n        exponent = 0.9;\n      }\n\n      const throttle = 500 / exponent;\n      await Promise.delay(throttle);\n      request(req);\n    }\n\n    isProcessing = false;\n  };\n\n  const request = async function ({\n    target,\n    spec,\n    resolve,\n    reject\n  }) {\n    inFlight += 1;\n    const result = await to(rp({ ...spec,\n      url: `${url(target)}${spec.url}`,\n      resolveWithFullResponse: true,\n      gzip: true,\n      json: true,\n      timeout: 5000\n    }));\n    inFlight -= 1;\n\n    if (result.isError) {\n      if (result.statusCode === 429) {\n        log('Exceeded Shopify API limit, will retry...', 'yellow');\n        list.unshift({\n          target,\n          spec,\n          resolve,\n          reject\n        });\n\n        if (!isProcessing) {\n          process();\n        }\n\n        return;\n      } else if (result.statusCode === 404) {\n        return reject({\n          message: `404 Not Found - Are you sure \"${_.get(spec, 'body.asset.key')}\" is a valid Shopify theme path?`,\n          data: _.get(spec, 'body')\n        });\n      } else if (result.error && ['ETIMEDOUT', 'ESOCKETTIMEDOUT'].includes(result.error.code)) {\n        log('Connection timed out, will retry...', 'yellow');\n        list.unshift({\n          target,\n          spec,\n          resolve,\n          reject\n        });\n\n        if (!isProcessing) {\n          process();\n        }\n\n        return;\n      } else if (result.error && result.error.code === 'EAI_AGAIN') {\n        log('Failed to resolve host, will retry...', 'yellow');\n        list.unshift({\n          target,\n          spec,\n          resolve,\n          reject\n        });\n\n        if (!isProcessing) {\n          process();\n        }\n\n        return;\n      } else {\n        let errorMsg;\n\n        if (result.message) {\n          errorMsg = result.message;\n\n          if (_.isObject(errorMsg)) {\n            errorMsg = JSON.stringify(errorMsg);\n          }\n        } else {\n          errorMsg = `Request Failed!: [${result.status}] ${result.statusText}`;\n        }\n\n        return reject({\n          message: errorMsg,\n          data: result.error\n        });\n      }\n    } else {\n      if (result.body.errors) {\n        return reject(result.body.errors);\n      } else {\n        let limit = result.headers['x-shopify-shop-api-call-limit'];\n        limit = limit.split('/');\n        rate = parseInt(limit[0], 10);\n        max = parseInt(limit[1], 10);\n      }\n    }\n\n    const linkList = result.headers.link ? result.headers.link.split(',') : [];\n\n    for (const link of linkList) {\n      if (link.match(/rel=\"next\"/)) {\n        result.linkNext = new URL(link.replace(/<(.*)>.*/, '$1'));\n      } else if (link.match(/rel=\"previous\"/)) {\n        result.linkPrev = new URL(link.replace(/<(.*)>.*/, '$1'));\n      }\n    }\n\n    return resolve(result);\n  };\n\n  return {\n    add\n  };\n};\n\nconst run = function (target, spec) {\n  let queue;\n\n  if (queues[target.domain]) {\n    queue = queues[target.domain];\n  } else {\n    queue = createQueue();\n    queues[target.domain] = queue;\n  }\n\n  return queue.add(target, spec);\n};\n\nconst url = function (target) {\n  return `${target.url}/${context.apiVersion}`;\n};\n\nmodule.exports = run;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "requestify.js"
      ],
      "names": [
        "Promise",
        "require",
        "rp",
        "_",
        "log",
        "to",
        "context",
        "queues",
        "createQueue",
        "isProcessing",
        "inFlight",
        "rate",
        "max",
        "list",
        "add",
        "target",
        "spec",
        "resolve",
        "reject",
        "push",
        "process",
        "length",
        "req",
        "shift",
        "headroom",
        "exponent",
        "throttle",
        "delay",
        "request",
        "result",
        "url",
        "resolveWithFullResponse",
        "gzip",
        "json",
        "timeout",
        "isError",
        "statusCode",
        "unshift",
        "message",
        "get",
        "data",
        "error",
        "includes",
        "code",
        "errorMsg",
        "isObject",
        "JSON",
        "stringify",
        "status",
        "statusText",
        "body",
        "errors",
        "limit",
        "headers",
        "split",
        "parseInt",
        "linkList",
        "link",
        "match",
        "linkNext",
        "URL",
        "replace",
        "linkPrev",
        "run",
        "queue",
        "domain",
        "apiVersion",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/",
      "sourcesContent": [
        "\nconst Promise = require('bluebird')\nconst rp = require('request-promise')\nconst _ = require('lodash')\nconst { log, to } = require('./helpers')\nconst context = require('./context')\n\nconst queues = {}\n\nconst createQueue = function () {\n  let isProcessing = false\n  let inFlight = 0\n  let rate = 0\n  let max = 5\n  const list = []\n\n  const add = async function (target, spec) {\n    return new Promise((resolve, reject) => {\n      list.push({ target, spec, resolve, reject })\n      if (!isProcessing) { process() }\n    })\n  }\n\n  const process = async function () {\n    isProcessing = true\n    while (list.length > 0) {\n      const req = list.shift()\n      let headroom = max - (rate + inFlight)\n      if (headroom <= 0) { headroom = 0 }\n      let exponent = (headroom * headroom)\n      if (exponent <= 0.9) { exponent = 0.9 }\n      const throttle = 500 / exponent\n\n      await Promise.delay(throttle)\n      request(req)\n    }\n    isProcessing = false\n  }\n\n  const request = async function ({ target, spec, resolve, reject }) {\n    inFlight += 1\n\n    const result = await to(rp({\n      ...spec,\n      url: `${url(target)}${spec.url}`,\n      resolveWithFullResponse: true,\n      gzip: true,\n      json: true,\n      timeout: 5000\n    }))\n\n    inFlight -= 1\n\n    if (result.isError) {\n      if (result.statusCode === 429) {\n        log('Exceeded Shopify API limit, will retry...', 'yellow')\n        list.unshift({ target, spec, resolve, reject })\n        if (!isProcessing) { process() }\n        return\n      } else if (result.statusCode === 404) {\n        return reject({\n          message: `404 Not Found - Are you sure \"${_.get(spec, 'body.asset.key')}\" is a valid Shopify theme path?`,\n          data: _.get(spec, 'body')\n        })\n      } else if (result.error && ['ETIMEDOUT', 'ESOCKETTIMEDOUT'].includes(result.error.code)) {\n        log('Connection timed out, will retry...', 'yellow')\n        list.unshift({ target, spec, resolve, reject })\n        if (!isProcessing) { process() }\n        return\n      } else if (result.error && result.error.code === 'EAI_AGAIN') {\n        log('Failed to resolve host, will retry...', 'yellow')\n        list.unshift({ target, spec, resolve, reject })\n        if (!isProcessing) { process() }\n        return\n      } else {\n        let errorMsg\n        if (result.message) {\n          errorMsg = result.message\n          if (_.isObject(errorMsg)) {\n            errorMsg = JSON.stringify(errorMsg)\n          }\n        } else {\n          errorMsg = `Request Failed!: [${result.status}] ${result.statusText}`\n        }\n        return reject({ message: errorMsg, data: result.error })\n      }\n    } else {\n      if (result.body.errors) {\n        return reject(result.body.errors)\n      } else {\n        let limit = result.headers['x-shopify-shop-api-call-limit']\n        limit = limit.split('/')\n        rate = parseInt(limit[0], 10)\n        max = parseInt(limit[1], 10)\n      }\n    }\n\n    const linkList = result.headers.link ? result.headers.link.split(',') : []\n\n    for (const link of linkList) {\n      if (link.match(/rel=\"next\"/)) {\n        result.linkNext = new URL(link.replace(/<(.*)>.*/, '$1'))\n      } else if (link.match(/rel=\"previous\"/)) {\n        result.linkPrev = new URL(link.replace(/<(.*)>.*/, '$1'))\n      }\n    }\n\n    return resolve(result)\n  }\n\n  return {\n    add\n  }\n}\n\nconst run = function (target, spec) {\n  let queue\n  if (queues[target.domain]) {\n    queue = queues[target.domain]\n  } else {\n    queue = createQueue()\n    queues[target.domain] = queue\n  }\n\n  return queue.add(target, spec)\n}\n\nconst url = function (target) {\n  return `${target.url}/${context.apiVersion}`\n}\n\nmodule.exports = run\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578107923000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// let _ = require('lodash')\nconst Promise = require('bluebird');\n\nconst {\n  loadConfig\n} = require('../helpers');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst context = require('../context.js');\n\nconst inquirer = Promise.promisifyAll(require('inquirer'));\n\nconst requireAll = require('require-all');\n\nconst quickshotignore = `\n# This your '.quickshotignore' file. Anything you put in here will be ignored by quickshot.\n# This file uses the same format as a '.gitignore' file.\n`;\n\nmodule.exports = async function () {\n  let config;\n  const actions = requireAll({\n    dirname: path.join(__dirname, 'config')\n  });\n\n  try {\n    config = await loadConfig();\n  } catch (err) {}\n\n  config = Object.assign({\n    concurrency: 20,\n    targets: []\n  }, config);\n  let choice = {};\n\n  while (choice.action !== 'Save configuration and exit') {\n    choice = await inquirer.prompt([{\n      type: 'list',\n      name: 'action',\n      message: 'Main Menu',\n      choices: ['targets', 'Save configuration and exit']\n    }]);\n\n    if (actions[choice.action] != null) {\n      await actions[choice.action](config);\n    }\n  }\n\n  try {\n    await fs.statAsync(path.join(process.cwd(), '.quickshot-ignore'));\n  } catch (err) {\n    await fs.writeFileAsync(path.join(process.cwd(), '.quickshot-ignore'), quickshotignore);\n  }\n\n  config.configVersion = context.configVersion;\n  await fs.writeFileAsync(path.join(process.cwd(), 'quickshot.json'), JSON.stringify(config, null, 2));\n  return 'Configuration saved!\\n';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJQcm9taXNlIiwicmVxdWlyZSIsImxvYWRDb25maWciLCJwYXRoIiwiZnMiLCJwcm9taXNpZnlBbGwiLCJjb250ZXh0IiwiaW5xdWlyZXIiLCJyZXF1aXJlQWxsIiwicXVpY2tzaG90aWdub3JlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbmZpZyIsImFjdGlvbnMiLCJkaXJuYW1lIiwiam9pbiIsIl9fZGlybmFtZSIsImVyciIsIk9iamVjdCIsImFzc2lnbiIsImNvbmN1cnJlbmN5IiwidGFyZ2V0cyIsImNob2ljZSIsImFjdGlvbiIsInByb21wdCIsInR5cGUiLCJuYW1lIiwibWVzc2FnZSIsImNob2ljZXMiLCJzdGF0QXN5bmMiLCJwcm9jZXNzIiwiY3dkIiwid3JpdGVGaWxlQXN5bmMiLCJjb25maWdWZXJzaW9uIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUNBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWlCRCxPQUFPLENBQUMsWUFBRCxDQUE5Qjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLEVBQUUsR0FBR0gsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0FELE9BQU8sQ0FBQ0ssWUFBUixDQUFxQkQsRUFBckI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHTCxPQUFPLENBQUMsZUFBRCxDQUF2Qjs7QUFFQSxNQUFNTSxRQUFRLEdBQUdQLE9BQU8sQ0FBQ0ssWUFBUixDQUFxQkosT0FBTyxDQUFDLFVBQUQsQ0FBNUIsQ0FBakI7O0FBQ0EsTUFBTU8sVUFBVSxHQUFHUCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFFQSxNQUFNUSxlQUFlLEdBQUk7OztDQUF6Qjs7QUFLQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLGtCQUFrQjtBQUNqQyxNQUFJQyxNQUFKO0FBRUEsUUFBTUMsT0FBTyxHQUFHTCxVQUFVLENBQUM7QUFDekJNLElBQUFBLE9BQU8sRUFBRVgsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckI7QUFEZ0IsR0FBRCxDQUExQjs7QUFJQSxNQUFJO0FBQ0ZKLElBQUFBLE1BQU0sR0FBRyxNQUFNVixVQUFVLEVBQXpCO0FBQ0QsR0FGRCxDQUVFLE9BQU9lLEdBQVAsRUFBWSxDQUFFOztBQUVoQkwsRUFBQUEsTUFBTSxHQUFHTSxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUNyQkMsSUFBQUEsV0FBVyxFQUFFLEVBRFE7QUFFckJDLElBQUFBLE9BQU8sRUFBRTtBQUZZLEdBQWQsRUFHTlQsTUFITSxDQUFUO0FBS0EsTUFBSVUsTUFBTSxHQUFHLEVBQWI7O0FBRUEsU0FBT0EsTUFBTSxDQUFDQyxNQUFQLEtBQWtCLDZCQUF6QixFQUF3RDtBQUN0REQsSUFBQUEsTUFBTSxHQUFHLE1BQU1mLFFBQVEsQ0FBQ2lCLE1BQVQsQ0FBZ0IsQ0FBQztBQUM5QkMsTUFBQUEsSUFBSSxFQUFFLE1BRHdCO0FBRTlCQyxNQUFBQSxJQUFJLEVBQUUsUUFGd0I7QUFHOUJDLE1BQUFBLE9BQU8sRUFBRSxXQUhxQjtBQUk5QkMsTUFBQUEsT0FBTyxFQUFFLENBQ1AsU0FETyxFQUVQLDZCQUZPO0FBSnFCLEtBQUQsQ0FBaEIsQ0FBZjs7QUFVQSxRQUFJZixPQUFPLENBQUNTLE1BQU0sQ0FBQ0MsTUFBUixDQUFQLElBQTBCLElBQTlCLEVBQW9DO0FBQ2xDLFlBQU1WLE9BQU8sQ0FBQ1MsTUFBTSxDQUFDQyxNQUFSLENBQVAsQ0FBdUJYLE1BQXZCLENBQU47QUFDRDtBQUNGOztBQUVELE1BQUk7QUFDRixVQUFNUixFQUFFLENBQUN5QixTQUFILENBQWExQixJQUFJLENBQUNZLElBQUwsQ0FBVWUsT0FBTyxDQUFDQyxHQUFSLEVBQVYsRUFBeUIsbUJBQXpCLENBQWIsQ0FBTjtBQUNELEdBRkQsQ0FFRSxPQUFPZCxHQUFQLEVBQVk7QUFDWixVQUFNYixFQUFFLENBQUM0QixjQUFILENBQWtCN0IsSUFBSSxDQUFDWSxJQUFMLENBQVVlLE9BQU8sQ0FBQ0MsR0FBUixFQUFWLEVBQXlCLG1CQUF6QixDQUFsQixFQUFpRXRCLGVBQWpFLENBQU47QUFDRDs7QUFFREcsRUFBQUEsTUFBTSxDQUFDcUIsYUFBUCxHQUF1QjNCLE9BQU8sQ0FBQzJCLGFBQS9CO0FBQ0EsUUFBTTdCLEVBQUUsQ0FBQzRCLGNBQUgsQ0FBa0I3QixJQUFJLENBQUNZLElBQUwsQ0FBVWUsT0FBTyxDQUFDQyxHQUFSLEVBQVYsRUFBeUIsZ0JBQXpCLENBQWxCLEVBQThERyxJQUFJLENBQUNDLFNBQUwsQ0FBZXZCLE1BQWYsRUFBdUIsSUFBdkIsRUFBNkIsQ0FBN0IsQ0FBOUQsQ0FBTjtBQUVBLFNBQU8sd0JBQVA7QUFDRCxDQTVDRCIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvcXVpY2tzaG90L3NyYy9jb21tYW5kcy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGxldCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpXG5jb25zdCB7IGxvYWRDb25maWcgfSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMnKVxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5Qcm9taXNlLnByb21pc2lmeUFsbChmcylcbmNvbnN0IGNvbnRleHQgPSByZXF1aXJlKCcuLi9jb250ZXh0LmpzJylcblxuY29uc3QgaW5xdWlyZXIgPSBQcm9taXNlLnByb21pc2lmeUFsbChyZXF1aXJlKCdpbnF1aXJlcicpKVxuY29uc3QgcmVxdWlyZUFsbCA9IHJlcXVpcmUoJ3JlcXVpcmUtYWxsJylcblxuY29uc3QgcXVpY2tzaG90aWdub3JlID0gYFxuIyBUaGlzIHlvdXIgJy5xdWlja3Nob3RpZ25vcmUnIGZpbGUuIEFueXRoaW5nIHlvdSBwdXQgaW4gaGVyZSB3aWxsIGJlIGlnbm9yZWQgYnkgcXVpY2tzaG90LlxuIyBUaGlzIGZpbGUgdXNlcyB0aGUgc2FtZSBmb3JtYXQgYXMgYSAnLmdpdGlnbm9yZScgZmlsZS5cbmBcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGxldCBjb25maWdcblxuICBjb25zdCBhY3Rpb25zID0gcmVxdWlyZUFsbCh7XG4gICAgZGlybmFtZTogcGF0aC5qb2luKF9fZGlybmFtZSwgJ2NvbmZpZycpXG4gIH0pXG5cbiAgdHJ5IHtcbiAgICBjb25maWcgPSBhd2FpdCBsb2FkQ29uZmlnKClcbiAgfSBjYXRjaCAoZXJyKSB7fVxuXG4gIGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe1xuICAgIGNvbmN1cnJlbmN5OiAyMCxcbiAgICB0YXJnZXRzOiBbXVxuICB9LCBjb25maWcpXG5cbiAgbGV0IGNob2ljZSA9IHt9XG5cbiAgd2hpbGUgKGNob2ljZS5hY3Rpb24gIT09ICdTYXZlIGNvbmZpZ3VyYXRpb24gYW5kIGV4aXQnKSB7XG4gICAgY2hvaWNlID0gYXdhaXQgaW5xdWlyZXIucHJvbXB0KFt7XG4gICAgICB0eXBlOiAnbGlzdCcsXG4gICAgICBuYW1lOiAnYWN0aW9uJyxcbiAgICAgIG1lc3NhZ2U6ICdNYWluIE1lbnUnLFxuICAgICAgY2hvaWNlczogW1xuICAgICAgICAndGFyZ2V0cycsXG4gICAgICAgICdTYXZlIGNvbmZpZ3VyYXRpb24gYW5kIGV4aXQnXG4gICAgICBdXG4gICAgfV0pXG5cbiAgICBpZiAoYWN0aW9uc1tjaG9pY2UuYWN0aW9uXSAhPSBudWxsKSB7XG4gICAgICBhd2FpdCBhY3Rpb25zW2Nob2ljZS5hY3Rpb25dKGNvbmZpZylcbiAgICB9XG4gIH1cblxuICB0cnkge1xuICAgIGF3YWl0IGZzLnN0YXRBc3luYyhwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJy5xdWlja3Nob3QtaWdub3JlJykpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGF3YWl0IGZzLndyaXRlRmlsZUFzeW5jKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnLnF1aWNrc2hvdC1pZ25vcmUnKSwgcXVpY2tzaG90aWdub3JlKVxuICB9XG5cbiAgY29uZmlnLmNvbmZpZ1ZlcnNpb24gPSBjb250ZXh0LmNvbmZpZ1ZlcnNpb25cbiAgYXdhaXQgZnMud3JpdGVGaWxlQXN5bmMocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdxdWlja3Nob3QuanNvbicpLCBKU09OLnN0cmluZ2lmeShjb25maWcsIG51bGwsIDIpKVxuXG4gIHJldHVybiAnQ29uZmlndXJhdGlvbiBzYXZlZCFcXG4nXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "Promise",
        "require",
        "loadConfig",
        "path",
        "fs",
        "promisifyAll",
        "context",
        "inquirer",
        "requireAll",
        "quickshotignore",
        "module",
        "exports",
        "config",
        "actions",
        "dirname",
        "join",
        "__dirname",
        "err",
        "Object",
        "assign",
        "concurrency",
        "targets",
        "choice",
        "action",
        "prompt",
        "type",
        "name",
        "message",
        "choices",
        "statAsync",
        "process",
        "cwd",
        "writeFileAsync",
        "configVersion",
        "JSON",
        "stringify"
      ],
      "mappings": ";;AACA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAiBD,OAAO,CAAC,YAAD,CAA9B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACAD,OAAO,CAACK,YAAR,CAAqBD,EAArB;;AACA,MAAME,OAAO,GAAGL,OAAO,CAAC,eAAD,CAAvB;;AAEA,MAAMM,QAAQ,GAAGP,OAAO,CAACK,YAAR,CAAqBJ,OAAO,CAAC,UAAD,CAA5B,CAAjB;;AACA,MAAMO,UAAU,GAAGP,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMQ,eAAe,GAAI;;;CAAzB;;AAKAC,MAAM,CAACC,OAAP,GAAiB,kBAAkB;AACjC,MAAIC,MAAJ;AAEA,QAAMC,OAAO,GAAGL,UAAU,CAAC;AACzBM,IAAAA,OAAO,EAAEX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,QAArB;AADgB,GAAD,CAA1B;;AAIA,MAAI;AACFJ,IAAAA,MAAM,GAAG,MAAMV,UAAU,EAAzB;AACD,GAFD,CAEE,OAAOe,GAAP,EAAY,CAAE;;AAEhBL,EAAAA,MAAM,GAAGM,MAAM,CAACC,MAAP,CAAc;AACrBC,IAAAA,WAAW,EAAE,EADQ;AAErBC,IAAAA,OAAO,EAAE;AAFY,GAAd,EAGNT,MAHM,CAAT;AAKA,MAAIU,MAAM,GAAG,EAAb;;AAEA,SAAOA,MAAM,CAACC,MAAP,KAAkB,6BAAzB,EAAwD;AACtDD,IAAAA,MAAM,GAAG,MAAMf,QAAQ,CAACiB,MAAT,CAAgB,CAAC;AAC9BC,MAAAA,IAAI,EAAE,MADwB;AAE9BC,MAAAA,IAAI,EAAE,QAFwB;AAG9BC,MAAAA,OAAO,EAAE,WAHqB;AAI9BC,MAAAA,OAAO,EAAE,CACP,SADO,EAEP,6BAFO;AAJqB,KAAD,CAAhB,CAAf;;AAUA,QAAIf,OAAO,CAACS,MAAM,CAACC,MAAR,CAAP,IAA0B,IAA9B,EAAoC;AAClC,YAAMV,OAAO,CAACS,MAAM,CAACC,MAAR,CAAP,CAAuBX,MAAvB,CAAN;AACD;AACF;;AAED,MAAI;AACF,UAAMR,EAAE,CAACyB,SAAH,CAAa1B,IAAI,CAACY,IAAL,CAAUe,OAAO,CAACC,GAAR,EAAV,EAAyB,mBAAzB,CAAb,CAAN;AACD,GAFD,CAEE,OAAOd,GAAP,EAAY;AACZ,UAAMb,EAAE,CAAC4B,cAAH,CAAkB7B,IAAI,CAACY,IAAL,CAAUe,OAAO,CAACC,GAAR,EAAV,EAAyB,mBAAzB,CAAlB,EAAiEtB,eAAjE,CAAN;AACD;;AAEDG,EAAAA,MAAM,CAACqB,aAAP,GAAuB3B,OAAO,CAAC2B,aAA/B;AACA,QAAM7B,EAAE,CAAC4B,cAAH,CAAkB7B,IAAI,CAACY,IAAL,CAAUe,OAAO,CAACC,GAAR,EAAV,EAAyB,gBAAzB,CAAlB,EAA8DG,IAAI,CAACC,SAAL,CAAevB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA9D,CAAN;AAEA,SAAO,wBAAP;AACD,CA5CD",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "sourcesContent": [
        "\n// let _ = require('lodash')\nconst Promise = require('bluebird')\nconst { loadConfig } = require('../helpers')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst context = require('../context.js')\n\nconst inquirer = Promise.promisifyAll(require('inquirer'))\nconst requireAll = require('require-all')\n\nconst quickshotignore = `\n# This your '.quickshotignore' file. Anything you put in here will be ignored by quickshot.\n# This file uses the same format as a '.gitignore' file.\n`\n\nmodule.exports = async function () {\n  let config\n\n  const actions = requireAll({\n    dirname: path.join(__dirname, 'config')\n  })\n\n  try {\n    config = await loadConfig()\n  } catch (err) {}\n\n  config = Object.assign({\n    concurrency: 20,\n    targets: []\n  }, config)\n\n  let choice = {}\n\n  while (choice.action !== 'Save configuration and exit') {\n    choice = await inquirer.prompt([{\n      type: 'list',\n      name: 'action',\n      message: 'Main Menu',\n      choices: [\n        'targets',\n        'Save configuration and exit'\n      ]\n    }])\n\n    if (actions[choice.action] != null) {\n      await actions[choice.action](config)\n    }\n  }\n\n  try {\n    await fs.statAsync(path.join(process.cwd(), '.quickshot-ignore'))\n  } catch (err) {\n    await fs.writeFileAsync(path.join(process.cwd(), '.quickshot-ignore'), quickshotignore)\n  }\n\n  config.configVersion = context.configVersion\n  await fs.writeFileAsync(path.join(process.cwd(), 'quickshot.json'), JSON.stringify(config, null, 2))\n\n  return 'Configuration saved!\\n'\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578095535000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/pages/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/pages/download.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages/download.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/pages/download.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages/download.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
        "sourceFileName": "download.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst {\n  log,\n  getTarget,\n  loadConfig,\n  mkdir,\n  stringifyPage\n} = require('../../helpers');\n\nconst ignoreParser = require('gitignore-parser');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify');\n\nmodule.exports = async function (argv) {\n  let ignore = null;\n  const config = await loadConfig();\n  const target = await getTarget(config, argv);\n  let total = 0;\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null;\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8');\n    ignore = ignoreParser.compile(ignoreFile);\n  } catch (err) {}\n\n  let res = await requestify(target, {\n    method: 'get',\n    url: '/pages.json',\n    qs: {\n      limit: 100\n    }\n  });\n  let done = false;\n\n  if (_.get(res, 'body.pages.length') === 0) {\n    done = true;\n  }\n\n  while (done === false) {\n    let pages = _.get(res, 'body.pages');\n\n    if (ignore) {\n      pages = _.reject(pages, function (page) {\n        return ignore.denies(`pages/${page.handle}`);\n      });\n    }\n\n    if (filter) {\n      pages = _.filter(pages, function (page) {\n        return filter.test(`pages/${page.handle}`);\n      });\n    }\n\n    await Promise.map(pages, async function (page) {\n      await mkdir(path.join(process.cwd(), 'pages'));\n      await fs.writeFileAsync(path.join(process.cwd(), 'pages', `${page.handle}.html`), stringifyPage(page));\n      total += 1;\n      log(`Downloaded ${page.handle}`, 'green');\n    });\n\n    if (res.linkNext == null) {\n      done = true;\n      break;\n    }\n\n    res = await requestify(target, {\n      method: 'get',\n      url: '/pages.json',\n      qs: {\n        limit: 100,\n        page_info: res.linkNext.searchParams.get('page_info')\n      }\n    });\n  }\n\n  return `Downloaded ${total} pages.`;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd25sb2FkLmpzIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiUHJvbWlzZSIsImxvZyIsImdldFRhcmdldCIsImxvYWRDb25maWciLCJta2RpciIsInN0cmluZ2lmeVBhZ2UiLCJpZ25vcmVQYXJzZXIiLCJwYXRoIiwiZnMiLCJwcm9taXNpZnlBbGwiLCJyZXF1ZXN0aWZ5IiwibW9kdWxlIiwiZXhwb3J0cyIsImFyZ3YiLCJpZ25vcmUiLCJjb25maWciLCJ0YXJnZXQiLCJ0b3RhbCIsImZpbHRlciIsIlJlZ0V4cCIsImlnbm9yZUZpbGUiLCJyZWFkRmlsZUFzeW5jIiwiY29tcGlsZSIsImVyciIsInJlcyIsIm1ldGhvZCIsInVybCIsInFzIiwibGltaXQiLCJkb25lIiwiZ2V0IiwicGFnZXMiLCJyZWplY3QiLCJwYWdlIiwiZGVuaWVzIiwiaGFuZGxlIiwidGVzdCIsIm1hcCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwid3JpdGVGaWxlQXN5bmMiLCJsaW5rTmV4dCIsInBhZ2VfaW5mbyIsInNlYXJjaFBhcmFtcyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWpCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQSxHQUFGO0FBQU9DLEVBQUFBLFNBQVA7QUFBa0JDLEVBQUFBLFVBQWxCO0FBQThCQyxFQUFBQSxLQUE5QjtBQUFxQ0MsRUFBQUE7QUFBckMsSUFBdUROLE9BQU8sQ0FBQyxlQUFELENBQXBFOztBQUNBLE1BQU1PLFlBQVksR0FBR1AsT0FBTyxDQUFDLGtCQUFELENBQTVCOztBQUNBLE1BQU1RLElBQUksR0FBR1IsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVMsRUFBRSxHQUFHVCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQUMsT0FBTyxDQUFDUyxZQUFSLENBQXFCRCxFQUFyQjs7QUFDQSxNQUFNRSxV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QUFQO0FBQ0E7QUFDRDs7QUFFREwsSUFBQUEsR0FBRyxHQUFHLE1BQU1kLFVBQVUsQ0FBQ00sTUFBRCxFQUFTO0FBQzdCUyxNQUFBQSxNQUFNLEVBQUUsS0FEcUI7QUFFN0JDLE1BQUFBLEdBQUcsRUFBRSxhQUZ3QjtBQUc3QkMsTUFBQUEsRUFBRSxFQUFFO0FBQ0ZDLFFBQUFBLEtBQUssRUFBRSxHQURMO0FBRUZlLFFBQUFBLFNBQVMsRUFBRW5CLEdBQUcsQ0FBQ2tCLFFBQUosQ0FBYUUsWUFBYixDQUEwQmQsR0FBMUIsQ0FBOEIsV0FBOUI7QUFGVDtBQUh5QixLQUFULENBQXRCO0FBUUQ7O0FBRUQsU0FBUSxjQUFhYixLQUFNLFNBQTNCO0FBQ0QsQ0FsRUQiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL3F1aWNrc2hvdC9zcmMvY29tbWFuZHMvcGFnZXMvIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpXG5jb25zdCB7IGxvZywgZ2V0VGFyZ2V0LCBsb2FkQ29uZmlnLCBta2Rpciwgc3RyaW5naWZ5UGFnZSB9ID0gcmVxdWlyZSgnLi4vLi4vaGVscGVycycpXG5jb25zdCBpZ25vcmVQYXJzZXIgPSByZXF1aXJlKCdnaXRpZ25vcmUtcGFyc2VyJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuUHJvbWlzZS5wcm9taXNpZnlBbGwoZnMpXG5jb25zdCByZXF1ZXN0aWZ5ID0gcmVxdWlyZSgnLi4vLi4vcmVxdWVzdGlmeScpXG5cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gKGFyZ3YpIHtcbiAgbGV0IGlnbm9yZSA9IG51bGxcbiAgY29uc3QgY29uZmlnID0gYXdhaXQgbG9hZENvbmZpZygpXG4gIGNvbnN0IHRhcmdldCA9IGF3YWl0IGdldFRhcmdldChjb25maWcsIGFyZ3YpXG5cbiAgbGV0IHRvdGFsID0gMFxuICB2YXIgZmlsdGVyID0gYXJndi5maWx0ZXIgPyBuZXcgUmVnRXhwKGBeJHthcmd2LmZpbHRlcn1gKSA6IG51bGxcblxuICB0cnkge1xuICAgIGNvbnN0IGlnbm9yZUZpbGUgPSBhd2FpdCBmcy5yZWFkRmlsZUFzeW5jKCcucXVpY2tzaG90LWlnbm9yZScsICd1dGY4JylcbiAgICBpZ25vcmUgPSBpZ25vcmVQYXJzZXIuY29tcGlsZShpZ25vcmVGaWxlKVxuICB9IGNhdGNoIChlcnIpIHt9XG5cbiAgbGV0IHJlcyA9IGF3YWl0IHJlcXVlc3RpZnkodGFyZ2V0LCB7XG4gICAgbWV0aG9kOiAnZ2V0JyxcbiAgICB1cmw6ICcvcGFnZXMuanNvbicsXG4gICAgcXM6IHtcbiAgICAgIGxpbWl0OiAxMDBcbiAgICB9XG4gIH0pXG5cbiAgbGV0IGRvbmUgPSBmYWxzZVxuXG4gIGlmIChfLmdldChyZXMsICdib2R5LnBhZ2VzLmxlbmd0aCcpID09PSAwKSB7XG4gICAgZG9uZSA9IHRydWVcbiAgfVxuXG4gIHdoaWxlIChkb25lID09PSBmYWxzZSkge1xuICAgIGxldCBwYWdlcyA9IF8uZ2V0KHJlcywgJ2JvZHkucGFnZXMnKVxuXG4gICAgaWYgKGlnbm9yZSkge1xuICAgICAgcGFnZXMgPSBfLnJlamVjdChwYWdlcywgZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgcmV0dXJuIGlnbm9yZS5kZW5pZXMoYHBhZ2VzLyR7cGFnZS5oYW5kbGV9YClcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcikge1xuICAgICAgcGFnZXMgPSBfLmZpbHRlcihwYWdlcywgZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgcmV0dXJuIGZpbHRlci50ZXN0KGBwYWdlcy8ke3BhZ2UuaGFuZGxlfWApXG4gICAgICB9KVxuICAgIH1cblxuICAgIGF3YWl0IFByb21pc2UubWFwKHBhZ2VzLCBhc3luYyBmdW5jdGlvbiAocGFnZSkge1xuICAgICAgYXdhaXQgbWtkaXIocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwYWdlcycpKVxuICAgICAgYXdhaXQgZnMud3JpdGVGaWxlQXN5bmMocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwYWdlcycsIGAke3BhZ2UuaGFuZGxlfS5odG1sYCksIHN0cmluZ2lmeVBhZ2UocGFnZSkpXG5cbiAgICAgIHRvdGFsICs9IDFcbiAgICAgIGxvZyhgRG93bmxvYWRlZCAke3BhZ2UuaGFuZGxlfWAsICdncmVlbicpXG4gICAgfSlcblxuICAgIGlmIChyZXMubGlua05leHQgPT0gbnVsbCkge1xuICAgICAgZG9uZSA9IHRydWVcbiAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgcmVzID0gYXdhaXQgcmVxdWVzdGlmeSh0YXJnZXQsIHtcbiAgICAgIG1ldGhvZDogJ2dldCcsXG4gICAgICB1cmw6ICcvcGFnZXMuanNvbicsXG4gICAgICBxczoge1xuICAgICAgICBsaW1pdDogMTAwLFxuICAgICAgICBwYWdlX2luZm86IHJlcy5saW5rTmV4dC5zZWFyY2hQYXJhbXMuZ2V0KCdwYWdlX2luZm8nKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICByZXR1cm4gYERvd25sb2FkZWQgJHt0b3RhbH0gcGFnZXMuYFxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "download.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "log",
        "getTarget",
        "loadConfig",
        "mkdir",
        "stringifyPage",
        "ignoreParser",
        "path",
        "fs",
        "promisifyAll",
        "requestify",
        "module",
        "exports",
        "argv",
        "ignore",
        "config",
        "target",
        "total",
        "filter",
        "RegExp",
        "ignoreFile",
        "readFileAsync",
        "compile",
        "err",
        "res",
        "method",
        "url",
        "qs",
        "limit",
        "done",
        "get",
        "pages",
        "reject",
        "page",
        "denies",
        "handle",
        "test",
        "map",
        "join",
        "process",
        "cwd",
        "writeFileAsync",
        "linkNext",
        "page_info",
        "searchParams"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst { log, getTarget, loadConfig, mkdir, stringifyPage } = require('../../helpers')\nconst ignoreParser = require('gitignore-parser')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify')\n\nmodule.exports = async function (argv) {\n  let ignore = null\n  const config = await loadConfig()\n  const target = await getTarget(config, argv)\n\n  let total = 0\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8')\n    ignore = ignoreParser.compile(ignoreFile)\n  } catch (err) {}\n\n  let res = await requestify(target, {\n    method: 'get',\n    url: '/pages.json',\n    qs: {\n      limit: 100\n    }\n  })\n\n  let done = false\n\n  if (_.get(res, 'body.pages.length') === 0) {\n    done = true\n  }\n\n  while (done === false) {\n    let pages = _.get(res, 'body.pages')\n\n    if (ignore) {\n      pages = _.reject(pages, function (page) {\n        return ignore.denies(`pages/${page.handle}`)\n      })\n    }\n\n    if (filter) {\n      pages = _.filter(pages, function (page) {\n        return filter.test(`pages/${page.handle}`)\n      })\n    }\n\n    await Promise.map(pages, async function (page) {\n      await mkdir(path.join(process.cwd(), 'pages'))\n      await fs.writeFileAsync(path.join(process.cwd(), 'pages', `${page.handle}.html`), stringifyPage(page))\n\n      total += 1\n      log(`Downloaded ${page.handle}`, 'green')\n    })\n\n    if (res.linkNext == null) {\n      done = true\n      break\n    }\n\n    res = await requestify(target, {\n      method: 'get',\n      url: '/pages.json',\n      qs: {\n        limit: 100,\n        page_info: res.linkNext.searchParams.get('page_info')\n      }\n    })\n  }\n\n  return `Downloaded ${total} pages.`\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578109816000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/pages/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/pages/upload.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages/upload.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/pages/upload.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages/upload.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
        "sourceFileName": "upload.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst {\n  log,\n  getTarget,\n  loadConfig,\n  to,\n  parsePage\n} = require('../../helpers');\n\nconst ignoreParser = require('gitignore-parser');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify');\n\nconst glob = require('glob');\n\nmodule.exports = async function (argv) {\n  let ignore = null;\n  const config = await loadConfig();\n  const target = await getTarget(config, argv);\n  let total = 0;\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null;\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8');\n    ignore = ignoreParser.compile(ignoreFile);\n  } catch (err) {}\n\n  let files = glob.sync('pages/*', {\n    nodir: true\n  });\n\n  if (ignore) {\n    files = _.reject(files, function (file) {\n      return ignore.denies(file);\n    });\n  }\n\n  if (filter) {\n    files = _.filter(files, function (file) {\n      const pathParts = file.split(path.sep);\n\n      const trimmedParts = _.drop(pathParts, _.lastIndexOf(pathParts, 'pages') + 1);\n\n      const key = trimmedParts.join('/');\n      return filter.test(key);\n    });\n  }\n\n  files = files.map(file => {\n    const pathParts = file.split(path.sep);\n\n    const trimmedParts = _.drop(pathParts, _.lastIndexOf(pathParts, 'pages') + 1);\n\n    const filepath = trimmedParts.join(path.sep);\n    return {\n      key: filepath,\n      name: path.basename(filepath),\n      path: file\n    };\n  });\n  await Promise.map(files, async function (file) {\n    const source = await fs.readFileAsync(file.path, 'utf8');\n    const page = parsePage(source);\n    const res = await to(requestify(target, {\n      method: 'put',\n      url: `/pages/${page.id}.json`,\n      body: {\n        page: _.pick(page, 'id', 'body_html', 'author', 'title', 'handle')\n      }\n    }));\n\n    if (res.isError) {\n      log(res, 'red');\n    } else {\n      total += 1;\n      log(`uploaded ${file.key}`, 'green');\n    }\n  }, {\n    concurrency: config.concurrency\n  });\n  return `Uploaded ${total} pages.`;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIlByb21pc2UiLCJsb2ciLCJnZXRUYXJnZXQiLCJsb2FkQ29uZmlnIiwidG8iLCJwYXJzZVBhZ2UiLCJpZ25vcmVQYXJzZXIiLCJwYXRoIiwiZnMiLCJwcm9taXNpZnlBbGwiLCJyZXF1ZXN0aWZ5IiwiZ2xvYiIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd2IiwiaWdub3JlIiwiY29uZmlnIiwidGFyZ2V0IiwidG90YWwiLCJmaWx0ZXIiLCJSZWdFeHAiLCJpZ25vcmVGaWxlIiwicmVhZEZpbGVBc3luYyIsImNvbXBpbGUiLCJlcnIiLCJmaWxlcyIsInN5bmMiLCJub2RpciIsInJlamVjdCIsImZpbGUiLCJkZW5pZXMiLCJwYXRoUGFydHMiLCJzcGxpdCIsInNlcCIsInRyaW1tZWRQYXJ0cyIsImRyb3AiLCJsYXN0SW5kZXhPZiIsImtleSIsImpvaW4iLCJ0ZXN0IiwibWFwIiwiZmlsZXBhdGgiLCJuYW1lIiwiYmFzZW5hbWUiLCJzb3VyY2UiLCJwYWdlIiwicmVzIiwibWV0aG9kIiwidXJsIiwiaWQiLCJib2R5IiwicGljayIsImlzRXJyb3IiLCJjb25jdXJyZW5jeSJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWpCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQSxHQUFGO0FBQU9DLEVBQUFBLFNBQVA7QUFBa0JDLEVBQUFBLFVBQWxCO0FBQThCQyxFQUFBQSxFQUE5QjtBQUFrQ0MsRUFBQUE7QUFBbEMsSUFBZ0ROLE9BQU8sQ0FBQyxlQUFELENBQTdEOztBQUNBLE1BQU1PLFlBQVksR0FBR1AsT0FBTyxDQUFDLGtCQUFELENBQTVCOztBQUNBLE1BQU1RLElBQUksR0FBR1IsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVMsRUFBRSxHQUFHVCxPQUFPLENB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aEIsRUFBc0I7QUFDN0MsVUFBTWUsTUFBTSxHQUFHLE1BQU1wQyxFQUFFLENBQUNjLGFBQUgsQ0FBaUJPLElBQUksQ0FBQ3RCLElBQXRCLEVBQTRCLE1BQTVCLENBQXJCO0FBQ0EsVUFBTXNDLElBQUksR0FBR3hDLFNBQVMsQ0FBQ3VDLE1BQUQsQ0FBdEI7QUFFQSxVQUFNRSxHQUFHLEdBQUcsTUFBTTFDLEVBQUUsQ0FBQ00sVUFBVSxDQUFDTyxNQUFELEVBQVM7QUFDdEM4QixNQUFBQSxNQUFNLEVBQUUsS0FEOEI7QUFFdENDLE1BQUFBLEdBQUcsRUFBRyxVQUFTSCxJQUFJLENBQUNJLEVBQUcsT0FGZTtBQUd0Q0MsTUFBQUEsSUFBSSxFQUFFO0FBQ0pMLFFBQUFBLElBQUksRUFBRS9DLENBQUMsQ0FBQ3FELElBQUYsQ0FBT04sSUFBUCxFQUFhLElBQWIsRUFBbUIsV0FBbkIsRUFBZ0MsUUFBaEMsRUFBMEMsT0FBMUMsRUFBbUQsUUFBbkQ7QUFERjtBQUhnQyxLQUFULENBQVgsQ0FBcEI7O0FBUUEsUUFBSUMsR0FBRyxDQUFDTSxPQUFSLEVBQWlCO0FBQ2ZuRCxNQUFBQSxHQUFHLENBQUM2QyxHQUFELEVBQU0sS0FBTixDQUFIO0FBQ0QsS0FGRCxNQUVPO0FBQ0w1QixNQUFBQSxLQUFLLElBQUksQ0FBVDtBQUNBakIsTUFBQUEsR0FBRyxDQUFFLFlBQVc0QixJQUFJLENBQUNRLEdBQUksRUFBdEIsRUFBeUIsT0FBekIsQ0FBSDtBQUNEO0FBQ0YsR0FsQkssRUFrQkg7QUFBRWdCLElBQUFBLFdBQVcsRUFBRXJDLE1BQU0sQ0FBQ3FDO0FBQXRCLEdBbEJHLENBQU47QUFvQkEsU0FBUSxZQUFXbkMsS0FBTSxTQUF6QjtBQUNELENBL0REIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9xdWlja3Nob3Qvc3JjL2NvbW1hbmRzL3BhZ2VzLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5jb25zdCBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKVxuY29uc3QgeyBsb2csIGdldFRhcmdldCwgbG9hZENvbmZpZywgdG8sIHBhcnNlUGFnZSB9ID0gcmVxdWlyZSgnLi4vLi4vaGVscGVycycpXG5jb25zdCBpZ25vcmVQYXJzZXIgPSByZXF1aXJlKCdnaXRpZ25vcmUtcGFyc2VyJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuUHJvbWlzZS5wcm9taXNpZnlBbGwoZnMpXG5jb25zdCByZXF1ZXN0aWZ5ID0gcmVxdWlyZSgnLi4vLi4vcmVxdWVzdGlmeScpXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpXG5cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gKGFyZ3YpIHtcbiAgbGV0IGlnbm9yZSA9IG51bGxcbiAgY29uc3QgY29uZmlnID0gYXdhaXQgbG9hZENvbmZpZygpXG4gIGNvbnN0IHRhcmdldCA9IGF3YWl0IGdldFRhcmdldChjb25maWcsIGFyZ3YpXG5cbiAgbGV0IHRvdGFsID0gMFxuICB2YXIgZmlsdGVyID0gYXJndi5maWx0ZXIgPyBuZXcgUmVnRXhwKGBeJHthcmd2LmZpbHRlcn1gKSA6IG51bGxcblxuICB0cnkge1xuICAgIGNvbnN0IGlnbm9yZUZpbGUgPSBhd2FpdCBmcy5yZWFkRmlsZUFzeW5jKCcucXVpY2tzaG90LWlnbm9yZScsICd1dGY4JylcbiAgICBpZ25vcmUgPSBpZ25vcmVQYXJzZXIuY29tcGlsZShpZ25vcmVGaWxlKVxuICB9IGNhdGNoIChlcnIpIHt9XG5cbiAgbGV0IGZpbGVzID0gZ2xvYi5zeW5jKCdwYWdlcy8qJywgeyBub2RpcjogdHJ1ZSB9KVxuXG4gIGlmIChpZ25vcmUpIHtcbiAgICBmaWxlcyA9IF8ucmVqZWN0KGZpbGVzLCBmdW5jdGlvbiAoZmlsZSkge1xuICAgICAgcmV0dXJuIGlnbm9yZS5kZW5pZXMoZmlsZSlcbiAgICB9KVxuICB9XG5cbiAgaWYgKGZpbHRlcikge1xuICAgIGZpbGVzID0gXy5maWx0ZXIoZmlsZXMsIGZ1bmN0aW9uIChmaWxlKSB7XG4gICAgICBjb25zdCBwYXRoUGFydHMgPSBmaWxlLnNwbGl0KHBhdGguc2VwKVxuICAgICAgY29uc3QgdHJpbW1lZFBhcnRzID0gXy5kcm9wKHBhdGhQYXJ0cywgKF8ubGFzdEluZGV4T2YocGF0aFBhcnRzLCAncGFnZXMnKSArIDEpKVxuICAgICAgY29uc3Qga2V5ID0gdHJpbW1lZFBhcnRzLmpvaW4oJy8nKVxuICAgICAgcmV0dXJuIGZpbHRlci50ZXN0KGtleSlcbiAgICB9KVxuICB9XG5cbiAgZmlsZXMgPSBmaWxlcy5tYXAoKGZpbGUpID0+IHtcbiAgICBjb25zdCBwYXRoUGFydHMgPSBmaWxlLnNwbGl0KHBhdGguc2VwKVxuICAgIGNvbnN0IHRyaW1tZWRQYXJ0cyA9IF8uZHJvcChwYXRoUGFydHMsIChfLmxhc3RJbmRleE9mKHBhdGhQYXJ0cywgJ3BhZ2VzJykgKyAxKSlcbiAgICBjb25zdCBmaWxlcGF0aCA9IHRyaW1tZWRQYXJ0cy5qb2luKHBhdGguc2VwKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGtleTogZmlsZXBhdGgsXG4gICAgICBuYW1lOiBwYXRoLmJhc2VuYW1lKGZpbGVwYXRoKSxcbiAgICAgIHBhdGg6IGZpbGVcbiAgICB9XG4gIH0pXG5cbiAgYXdhaXQgUHJvbWlzZS5tYXAoZmlsZXMsIGFzeW5jIGZ1bmN0aW9uIChmaWxlKSB7XG4gICAgY29uc3Qgc291cmNlID0gYXdhaXQgZnMucmVhZEZpbGVBc3luYyhmaWxlLnBhdGgsICd1dGY4JylcbiAgICBjb25zdCBwYWdlID0gcGFyc2VQYWdlKHNvdXJjZSlcblxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRvKHJlcXVlc3RpZnkodGFyZ2V0LCB7XG4gICAgICBtZXRob2Q6ICdwdXQnLFxuICAgICAgdXJsOiBgL3BhZ2VzLyR7cGFnZS5pZH0uanNvbmAsXG4gICAgICBib2R5OiB7XG4gICAgICAgIHBhZ2U6IF8ucGljayhwYWdlLCAnaWQnLCAnYm9keV9odG1sJywgJ2F1dGhvcicsICd0aXRsZScsICdoYW5kbGUnKVxuICAgICAgfVxuICAgIH0pKVxuXG4gICAgaWYgKHJlcy5pc0Vycm9yKSB7XG4gICAgICBsb2cocmVzLCAncmVkJylcbiAgICB9IGVsc2Uge1xuICAgICAgdG90YWwgKz0gMVxuICAgICAgbG9nKGB1cGxvYWRlZCAke2ZpbGUua2V5fWAsICdncmVlbicpXG4gICAgfVxuICB9LCB7IGNvbmN1cnJlbmN5OiBjb25maWcuY29uY3VycmVuY3kgfSlcblxuICByZXR1cm4gYFVwbG9hZGVkICR7dG90YWx9IHBhZ2VzLmBcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "upload.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "log",
        "getTarget",
        "loadConfig",
        "to",
        "parsePage",
        "ignoreParser",
        "path",
        "fs",
        "promisifyAll",
        "requestify",
        "glob",
        "module",
        "exports",
        "argv",
        "ignore",
        "config",
        "target",
        "total",
        "filter",
        "RegExp",
        "ignoreFile",
        "readFileAsync",
        "compile",
        "err",
        "files",
        "sync",
        "nodir",
        "reject",
        "file",
        "denies",
        "pathParts",
        "split",
        "sep",
        "trimmedParts",
        "drop",
        "lastIndexOf",
        "key",
        "join",
        "test",
        "map",
        "filepath",
        "name",
        "basename",
        "source",
        "page",
        "res",
        "method",
        "url",
        "id",
        "body",
        "pick",
        "isError",
        "concurrency"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/pages/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst { log, getTarget, loadConfig, to, parsePage } = require('../../helpers')\nconst ignoreParser = require('gitignore-parser')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify')\nconst glob = require('glob')\n\nmodule.exports = async function (argv) {\n  let ignore = null\n  const config = await loadConfig()\n  const target = await getTarget(config, argv)\n\n  let total = 0\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8')\n    ignore = ignoreParser.compile(ignoreFile)\n  } catch (err) {}\n\n  let files = glob.sync('pages/*', { nodir: true })\n\n  if (ignore) {\n    files = _.reject(files, function (file) {\n      return ignore.denies(file)\n    })\n  }\n\n  if (filter) {\n    files = _.filter(files, function (file) {\n      const pathParts = file.split(path.sep)\n      const trimmedParts = _.drop(pathParts, (_.lastIndexOf(pathParts, 'pages') + 1))\n      const key = trimmedParts.join('/')\n      return filter.test(key)\n    })\n  }\n\n  files = files.map((file) => {\n    const pathParts = file.split(path.sep)\n    const trimmedParts = _.drop(pathParts, (_.lastIndexOf(pathParts, 'pages') + 1))\n    const filepath = trimmedParts.join(path.sep)\n\n    return {\n      key: filepath,\n      name: path.basename(filepath),\n      path: file\n    }\n  })\n\n  await Promise.map(files, async function (file) {\n    const source = await fs.readFileAsync(file.path, 'utf8')\n    const page = parsePage(source)\n\n    const res = await to(requestify(target, {\n      method: 'put',\n      url: `/pages/${page.id}.json`,\n      body: {\n        page: _.pick(page, 'id', 'body_html', 'author', 'title', 'handle')\n      }\n    }))\n\n    if (res.isError) {\n      log(res, 'red')\n    } else {\n      total += 1\n      log(`uploaded ${file.key}`, 'green')\n    }\n  }, { concurrency: config.concurrency })\n\n  return `Uploaded ${total} pages.`\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578109828000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/pages.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/pages.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/pages.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
        "sourceFileName": "pages.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// let _ = require('lodash')\nconst path = require('path');\n\nconst requireAll = require('require-all');\n/* global VERSION */\n\n\nvar HELPTEXT = `\n\n    Quickshot pages ${VERSION}\n    ==============================\n\n    Commands:\n      quickshot pages upload [options]              Upload pages\n      quickshot pages download [options]            Download pages\n      quickshot pages                               Show this screen.\n\n    Options:\n      --target=[targetname]                         Explicitly select target for upload/download\n      --filter=[filter]                             Filter files for upload/download\n\n`;\n\nmodule.exports = async function (argv) {\n  const command = argv._.shift();\n\n  const commands = requireAll({\n    dirname: path.join(__dirname, 'pages')\n  });\n\n  if (commands[command] == null) {\n    console.log(HELPTEXT);\n  } else {\n    return commands[command](argv);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VzLmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwicmVxdWlyZUFsbCIsIkhFTFBURVhUIiwiVkVSU0lPTiIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd2IiwiY29tbWFuZCIsIl8iLCJzaGlmdCIsImNvbW1hbmRzIiwiZGlybmFtZSIsImpvaW4iLCJfX2Rpcm5hbWUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0EsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCO0FBRUE7OztBQUVBLElBQUlFLFFBQVEsR0FBSTs7c0JBRU1DLE9BQVE7Ozs7Ozs7Ozs7OztDQUY5Qjs7QUFnQkFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixnQkFBZ0JDLElBQWhCLEVBQXNCO0FBQ3JDLFFBQU1DLE9BQU8sR0FBR0QsSUFBSSxDQUFDRSxDQUFMLENBQU9DLEtBQVAsRUFBaEI7O0FBRUEsUUFBTUMsUUFBUSxHQUFHVCxVQUFVLENBQUM7QUFDMUJVLElBQUFBLE9BQU8sRUFBRVosSUFBSSxDQUFDYSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckI7QUFEaUIsR0FBRCxDQUEzQjs7QUFJQSxNQUFJSCxRQUFRLENBQUNILE9BQUQsQ0FBUixJQUFxQixJQUF6QixFQUErQjtBQUM3Qk8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVliLFFBQVo7QUFDRCxHQUZELE1BRU87QUFDTCxXQUFPUSxRQUFRLENBQUNILE9BQUQsQ0FBUixDQUFrQkQsSUFBbEIsQ0FBUDtBQUNEO0FBQ0YsQ0FaRCIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvcXVpY2tzaG90L3NyYy9jb21tYW5kcy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGxldCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IHJlcXVpcmVBbGwgPSByZXF1aXJlKCdyZXF1aXJlLWFsbCcpXG5cbi8qIGdsb2JhbCBWRVJTSU9OICovXG5cbnZhciBIRUxQVEVYVCA9IGBcblxuICAgIFF1aWNrc2hvdCBwYWdlcyAke1ZFUlNJT059XG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgICBDb21tYW5kczpcbiAgICAgIHF1aWNrc2hvdCBwYWdlcyB1cGxvYWQgW29wdGlvbnNdICAgICAgICAgICAgICBVcGxvYWQgcGFnZXNcbiAgICAgIHF1aWNrc2hvdCBwYWdlcyBkb3dubG9hZCBbb3B0aW9uc10gICAgICAgICAgICBEb3dubG9hZCBwYWdlc1xuICAgICAgcXVpY2tzaG90IHBhZ2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBzY3JlZW4uXG5cbiAgICBPcHRpb25zOlxuICAgICAgLS10YXJnZXQ9W3RhcmdldG5hbWVdICAgICAgICAgICAgICAgICAgICAgICAgIEV4cGxpY2l0bHkgc2VsZWN0IHRhcmdldCBmb3IgdXBsb2FkL2Rvd25sb2FkXG4gICAgICAtLWZpbHRlcj1bZmlsdGVyXSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmlsdGVyIGZpbGVzIGZvciB1cGxvYWQvZG93bmxvYWRcblxuYFxuXG5tb2R1bGUuZXhwb3J0cyA9IGFzeW5jIGZ1bmN0aW9uIChhcmd2KSB7XG4gIGNvbnN0IGNvbW1hbmQgPSBhcmd2Ll8uc2hpZnQoKVxuXG4gIGNvbnN0IGNvbW1hbmRzID0gcmVxdWlyZUFsbCh7XG4gICAgZGlybmFtZTogcGF0aC5qb2luKF9fZGlybmFtZSwgJ3BhZ2VzJylcbiAgfSlcblxuICBpZiAoY29tbWFuZHNbY29tbWFuZF0gPT0gbnVsbCkge1xuICAgIGNvbnNvbGUubG9nKEhFTFBURVhUKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBjb21tYW5kc1tjb21tYW5kXShhcmd2KVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pages.js"
      ],
      "names": [
        "path",
        "require",
        "requireAll",
        "HELPTEXT",
        "VERSION",
        "module",
        "exports",
        "argv",
        "command",
        "_",
        "shift",
        "commands",
        "dirname",
        "join",
        "__dirname",
        "console",
        "log"
      ],
      "mappings": ";;AACA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;AAEA;;;AAEA,IAAIE,QAAQ,GAAI;;sBAEMC,OAAQ;;;;;;;;;;;;CAF9B;;AAgBAC,MAAM,CAACC,OAAP,GAAiB,gBAAgBC,IAAhB,EAAsB;AACrC,QAAMC,OAAO,GAAGD,IAAI,CAACE,CAAL,CAAOC,KAAP,EAAhB;;AAEA,QAAMC,QAAQ,GAAGT,UAAU,CAAC;AAC1BU,IAAAA,OAAO,EAAEZ,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqB,OAArB;AADiB,GAAD,CAA3B;;AAIA,MAAIH,QAAQ,CAACH,OAAD,CAAR,IAAqB,IAAzB,EAA+B;AAC7BO,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACD,GAFD,MAEO;AACL,WAAOQ,QAAQ,CAACH,OAAD,CAAR,CAAkBD,IAAlB,CAAP;AACD;AACF,CAZD",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "sourcesContent": [
        "\n// let _ = require('lodash')\nconst path = require('path')\nconst requireAll = require('require-all')\n\n/* global VERSION */\n\nvar HELPTEXT = `\n\n    Quickshot pages ${VERSION}\n    ==============================\n\n    Commands:\n      quickshot pages upload [options]              Upload pages\n      quickshot pages download [options]            Download pages\n      quickshot pages                               Show this screen.\n\n    Options:\n      --target=[targetname]                         Explicitly select target for upload/download\n      --filter=[filter]                             Filter files for upload/download\n\n`\n\nmodule.exports = async function (argv) {\n  const command = argv._.shift()\n\n  const commands = requireAll({\n    dirname: path.join(__dirname, 'pages')\n  })\n\n  if (commands[command] == null) {\n    console.log(HELPTEXT)\n  } else {\n    return commands[command](argv)\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578097358000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/download.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/download.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/theme/download.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/download.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
        "sourceFileName": "download.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst {\n  log,\n  getTarget,\n  loadConfig,\n  mkdir,\n  to\n} = require('../../helpers');\n\nconst ignoreParser = require('gitignore-parser');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify');\n\nmodule.exports = async function (argv) {\n  let ignore = null;\n  const config = await loadConfig();\n  const target = await getTarget(config, argv);\n  let total = 0;\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null;\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8');\n    ignore = ignoreParser.compile(ignoreFile);\n  } catch (err) {}\n\n  const res = await requestify(target, {\n    method: 'get',\n    url: `/themes/${target.theme_id}/assets.json`\n  });\n\n  let assets = _.get(res, 'body.assets');\n\n  if (ignore) {\n    assets = _.reject(assets, function (asset) {\n      return ignore.denies(`theme/${asset.key}`);\n    });\n  }\n\n  if (filter) {\n    assets = _.filter(assets, function (asset) {\n      return filter.test(asset.key);\n    });\n  }\n\n  await Promise.map(assets, async function (asset) {\n    const res = await to(requestify(target, {\n      method: 'get',\n      url: `/themes/${target.theme_id}/assets.json`,\n      qs: {\n        'asset[key]': asset.key,\n        theme_id: target.theme_id\n      }\n    }));\n\n    if (res.isError) {\n      log(res, 'red');\n    } else {\n      const data = _.get(res, 'body.asset');\n\n      let rawData = null;\n\n      if (data.attachment) {\n        rawData = Buffer.from(data.attachment, 'base64');\n      } else if (data.value) {\n        rawData = Buffer.from(data.value, 'utf8');\n      }\n\n      await mkdir(path.join(process.cwd(), 'theme', path.dirname(data.key)));\n      await fs.writeFileAsync(path.join(process.cwd(), 'theme', data.key), rawData);\n      total += 1;\n      log(`Downloaded ${data.key}`, 'green');\n    }\n  }, {\n    concurrency: config.concurrency\n  });\n  return `Downloaded ${total} files.`;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd25sb2FkLmpzIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiUHJvbWlzZSIsImxvZyIsImdldFRhcmdldCIsImxvYWRDb25maWciLCJta2RpciIsInRvIiwiaWdub3JlUGFyc2VyIiwicGF0aCIsImZzIiwicHJvbWlzaWZ5QWxsIiwicmVxdWVzdGlmeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd2IiwiaWdub3JlIiwiY29uZmlnIiwidGFyZ2V0IiwidG90YWwiLCJmaWx0ZXIiLCJSZWdFeHAiLCJpZ25vcmVGaWxlIiwicmVhZEZpbGVBc3luYyIsImNvbXBpbGUiLCJlcnIiLCJyZXMiLCJtZXRob2QiLCJ1cmwiLCJ0aGVtZV9pZCIsImFzc2V0cyIsImdldCIsInJlamVjdCIsImFzc2V0IiwiZGVuaWVzIiwia2V5IiwidGVzdCIsIm1hcCIsInFzIiwiaXNFcnJvciIsImRhdGEiLCJyYXdEYXRhIiwiYXR0YWNobWVudCIsIkJ1ZmZlciIsImZyb20iLCJ2YWx1ZSIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiZGlybmFtZSIsIndyaXRlRmlsZUFzeW5jIiwiY29uY3VycmVuY3kiXSwibWFwcGluZ3MiOiI7O0FBQ0EsTUFBTUEsQ0FBQyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFqQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXZCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsR0FBRjtBQUFPQyxFQUFBQSxTQUFQO0FBQWtCQyxFQUFBQSxVQUFsQjtBQUE4QkMsRUFBQUEsS0FBOUI7QUFBcUNDLEVBQUFBO0FBQXJDLElBQTRDTixPQUFPLENBQUMsZUFBRCxDQUF6RDs7QUFDQSxNQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFDQSxNQUFNUSxJQUFJLEdBQUdSLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1TLEVBQUUsR0FBR1QsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0FDLE9BQU8sQ0FB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R0UsTUFBTSxDQUFDQyxJQUFQLENBQVlKLElBQUksQ0FBQ0ssS0FBakIsRUFBd0IsTUFBeEIsQ0FBVjtBQUNEOztBQUVELFlBQU12QyxLQUFLLENBQUNHLElBQUksQ0FBQ3FDLElBQUwsQ0FBVUMsT0FBTyxDQUFDQyxHQUFSLEVBQVYsRUFBeUIsT0FBekIsRUFBa0N2QyxJQUFJLENBQUN3QyxPQUFMLENBQWFULElBQUksQ0FBQ0wsR0FBbEIsQ0FBbEMsQ0FBRCxDQUFYO0FBQ0EsWUFBTXpCLEVBQUUsQ0FBQ3dDLGNBQUgsQ0FBa0J6QyxJQUFJLENBQUNxQyxJQUFMLENBQVVDLE9BQU8sQ0FBQ0MsR0FBUixFQUFWLEVBQXlCLE9BQXpCLEVBQWtDUixJQUFJLENBQUNMLEdBQXZDLENBQWxCLEVBQStETSxPQUEvRCxDQUFOO0FBRUF0QixNQUFBQSxLQUFLLElBQUksQ0FBVDtBQUNBaEIsTUFBQUEsR0FBRyxDQUFFLGNBQWFxQyxJQUFJLENBQUNMLEdBQUksRUFBeEIsRUFBMkIsT0FBM0IsQ0FBSDtBQUNEO0FBQ0YsR0E1QkssRUE0Qkg7QUFBRWdCLElBQUFBLFdBQVcsRUFBRWxDLE1BQU0sQ0FBQ2tDO0FBQXRCLEdBNUJHLENBQU47QUE4QkEsU0FBUSxjQUFhaEMsS0FBTSxTQUEzQjtBQUNELENBOUREIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9xdWlja3Nob3Qvc3JjL2NvbW1hbmRzL3RoZW1lLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5jb25zdCBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKVxuY29uc3QgeyBsb2csIGdldFRhcmdldCwgbG9hZENvbmZpZywgbWtkaXIsIHRvIH0gPSByZXF1aXJlKCcuLi8uLi9oZWxwZXJzJylcbmNvbnN0IGlnbm9yZVBhcnNlciA9IHJlcXVpcmUoJ2dpdGlnbm9yZS1wYXJzZXInKVxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5Qcm9taXNlLnByb21pc2lmeUFsbChmcylcbmNvbnN0IHJlcXVlc3RpZnkgPSByZXF1aXJlKCcuLi8uLi9yZXF1ZXN0aWZ5JylcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyBmdW5jdGlvbiAoYXJndikge1xuICBsZXQgaWdub3JlID0gbnVsbFxuICBjb25zdCBjb25maWcgPSBhd2FpdCBsb2FkQ29uZmlnKClcbiAgY29uc3QgdGFyZ2V0ID0gYXdhaXQgZ2V0VGFyZ2V0KGNvbmZpZywgYXJndilcblxuICBsZXQgdG90YWwgPSAwXG4gIHZhciBmaWx0ZXIgPSBhcmd2LmZpbHRlciA/IG5ldyBSZWdFeHAoYF4ke2FyZ3YuZmlsdGVyfWApIDogbnVsbFxuXG4gIHRyeSB7XG4gICAgY29uc3QgaWdub3JlRmlsZSA9IGF3YWl0IGZzLnJlYWRGaWxlQXN5bmMoJy5xdWlja3Nob3QtaWdub3JlJywgJ3V0ZjgnKVxuICAgIGlnbm9yZSA9IGlnbm9yZVBhcnNlci5jb21waWxlKGlnbm9yZUZpbGUpXG4gIH0gY2F0Y2ggKGVycikge31cblxuICBjb25zdCByZXMgPSBhd2FpdCByZXF1ZXN0aWZ5KHRhcmdldCwge1xuICAgIG1ldGhvZDogJ2dldCcsXG4gICAgdXJsOiBgL3RoZW1lcy8ke3RhcmdldC50aGVtZV9pZH0vYXNzZXRzLmpzb25gXG4gIH0pXG4gIGxldCBhc3NldHMgPSBfLmdldChyZXMsICdib2R5LmFzc2V0cycpXG5cbiAgaWYgKGlnbm9yZSkge1xuICAgIGFzc2V0cyA9IF8ucmVqZWN0KGFzc2V0cywgZnVuY3Rpb24gKGFzc2V0KSB7XG4gICAgICByZXR1cm4gaWdub3JlLmRlbmllcyhgdGhlbWUvJHthc3NldC5rZXl9YClcbiAgICB9KVxuICB9XG5cbiAgaWYgKGZpbHRlcikge1xuICAgIGFzc2V0cyA9IF8uZmlsdGVyKGFzc2V0cywgZnVuY3Rpb24gKGFzc2V0KSB7XG4gICAgICByZXR1cm4gZmlsdGVyLnRlc3QoYXNzZXQua2V5KVxuICAgIH0pXG4gIH1cblxuICBhd2FpdCBQcm9taXNlLm1hcChhc3NldHMsIGFzeW5jIGZ1bmN0aW9uIChhc3NldCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRvKHJlcXVlc3RpZnkodGFyZ2V0LCB7XG4gICAgICBtZXRob2Q6ICdnZXQnLFxuICAgICAgdXJsOiBgL3RoZW1lcy8ke3RhcmdldC50aGVtZV9pZH0vYXNzZXRzLmpzb25gLFxuICAgICAgcXM6IHtcbiAgICAgICAgJ2Fzc2V0W2tleV0nOiBhc3NldC5rZXksXG4gICAgICAgIHRoZW1lX2lkOiB0YXJnZXQudGhlbWVfaWRcbiAgICAgIH1cbiAgICB9KSlcblxuICAgIGlmIChyZXMuaXNFcnJvcikge1xuICAgICAgbG9nKHJlcywgJ3JlZCcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBfLmdldChyZXMsICdib2R5LmFzc2V0JylcbiAgICAgIGxldCByYXdEYXRhID0gbnVsbFxuXG4gICAgICBpZiAoZGF0YS5hdHRhY2htZW50KSB7XG4gICAgICAgIHJhd0RhdGEgPSBCdWZmZXIuZnJvbShkYXRhLmF0dGFjaG1lbnQsICdiYXNlNjQnKVxuICAgICAgfSBlbHNlIGlmIChkYXRhLnZhbHVlKSB7XG4gICAgICAgIHJhd0RhdGEgPSBCdWZmZXIuZnJvbShkYXRhLnZhbHVlLCAndXRmOCcpXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IG1rZGlyKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAndGhlbWUnLCBwYXRoLmRpcm5hbWUoZGF0YS5rZXkpKSlcbiAgICAgIGF3YWl0IGZzLndyaXRlRmlsZUFzeW5jKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAndGhlbWUnLCBkYXRhLmtleSksIHJhd0RhdGEpXG5cbiAgICAgIHRvdGFsICs9IDFcbiAgICAgIGxvZyhgRG93bmxvYWRlZCAke2RhdGEua2V5fWAsICdncmVlbicpXG4gICAgfVxuICB9LCB7IGNvbmN1cnJlbmN5OiBjb25maWcuY29uY3VycmVuY3kgfSlcblxuICByZXR1cm4gYERvd25sb2FkZWQgJHt0b3RhbH0gZmlsZXMuYFxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "download.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "log",
        "getTarget",
        "loadConfig",
        "mkdir",
        "to",
        "ignoreParser",
        "path",
        "fs",
        "promisifyAll",
        "requestify",
        "module",
        "exports",
        "argv",
        "ignore",
        "config",
        "target",
        "total",
        "filter",
        "RegExp",
        "ignoreFile",
        "readFileAsync",
        "compile",
        "err",
        "res",
        "method",
        "url",
        "theme_id",
        "assets",
        "get",
        "reject",
        "asset",
        "denies",
        "key",
        "test",
        "map",
        "qs",
        "isError",
        "data",
        "rawData",
        "attachment",
        "Buffer",
        "from",
        "value",
        "join",
        "process",
        "cwd",
        "dirname",
        "writeFileAsync",
        "concurrency"
      ],
      "mappings": ";;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA,GAAF;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA;AAArC,IAA4CN,OAAO,CAAC,eAAD,CAAzD;;AACA,MAAMO,YAAY,GAAGP,OAAO,CAAC,kBAAD,CAA5B;;AACA,MAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMS,EAAE,GAAGT,OAAO,CAAC,IAAD,CAAlB;;AACAC,OAAO,CAACS,YAAR,CAAqBD,EAArB;;AACA,MAAME,UAAU,GAAGX,OAAO,CAAC,kBAAD,CAA1B;;AAEAY,MAAM,CAACC,OAAP,GAAiB,gBAAgBC,IAAhB,EAAsB;AACrC,MAAIC,MAAM,GAAG,IAAb;AACA,QAAMC,MAAM,GAAG,MAAMZ,UAAU,EAA/B;AACA,QAAMa,MAAM,GAAG,MAAMd,SAAS,CAACa,MAAD,EAASF,IAAT,CAA9B;AAEA,MAAII,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAGL,IAAI,CAACK,MAAL,GAAc,IAAIC,MAAJ,CAAY,IAAGN,IAAI,CAACK,MAAO,EAA3B,CAAd,GAA8C,IAA3D;;AAEA,MAAI;AACF,UAAME,UAAU,GAAG,MAAMZ,EAAE,CAACa,aAAH,CAAiB,mBAAjB,EAAsC,MAAtC,CAAzB;AACAP,IAAAA,MAAM,GAAGR,YAAY,CAACgB,OAAb,CAAqBF,UAArB,CAAT;AACD,GAHD,CAGE,OAAOG,GAAP,EAAY,CAAE;;AAEhB,QAAMC,GAAG,GAAG,MAAMd,UAAU,CAACM,MAAD,EAAS;AACnCS,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,GAAG,EAAG,WAAUV,MAAM,CAACW,QAAS;AAFG,GAAT,CAA5B;;AAIA,MAAIC,MAAM,GAAG9B,CAAC,CAAC+B,GAAF,CAAML,GAAN,EAAW,aAAX,CAAb;;AAEA,MAAIV,MAAJ,EAAY;AACVc,IAAAA,MAAM,GAAG9B,CAAC,CAACgC,MAAF,CAASF,MAAT,EAAiB,UAAUG,KAAV,EAAiB;AACzC,aAAOjB,MAAM,CAACkB,MAAP,CAAe,SAAQD,KAAK,CAACE,GAAI,EAAjC,CAAP;AACD,KAFQ,CAAT;AAGD;;AAED,MAAIf,MAAJ,EAAY;AACVU,IAAAA,MAAM,GAAG9B,CAAC,CAACoB,MAAF,CAASU,MAAT,EAAiB,UAAUG,KAAV,EAAiB;AACzC,aAAOb,MAAM,CAACgB,IAAP,CAAYH,KAAK,CAACE,GAAlB,CAAP;AACD,KAFQ,CAAT;AAGD;;AAED,QAAMjC,OAAO,CAACmC,GAAR,CAAYP,MAAZ,EAAoB,gBAAgBG,KAAhB,EAAuB;AAC/C,UAAMP,GAAG,GAAG,MAAMnB,EAAE,CAACK,UAAU,CAACM,MAAD,EAAS;AACtCS,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,GAAG,EAAG,WAAUV,MAAM,CAACW,QAAS,cAFM;AAGtCS,MAAAA,EAAE,EAAE;AACF,sBAAcL,KAAK,CAACE,GADlB;AAEFN,QAAAA,QAAQ,EAAEX,MAAM,CAACW;AAFf;AAHkC,KAAT,CAAX,CAApB;;AASA,QAAIH,GAAG,CAACa,OAAR,EAAiB;AACfpC,MAAAA,GAAG,CAACuB,GAAD,EAAM,KAAN,CAAH;AACD,KAFD,MAEO;AACL,YAAMc,IAAI,GAAGxC,CAAC,CAAC+B,GAAF,CAAML,GAAN,EAAW,YAAX,CAAb;;AACA,UAAIe,OAAO,GAAG,IAAd;;AAEA,UAAID,IAAI,CAACE,UAAT,EAAqB;AACnBD,QAAAA,OAAO,GAAGE,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACE,UAAjB,EAA6B,QAA7B,CAAV;AACD,OAFD,MAEO,IAAIF,IAAI,CAACK,KAAT,EAAgB;AACrBJ,QAAAA,OAAO,GAAGE,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,KAAjB,EAAwB,MAAxB,CAAV;AACD;;AAED,YAAMvC,KAAK,CAACG,IAAI,CAACqC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkCvC,IAAI,CAACwC,OAAL,CAAaT,IAAI,CAACL,GAAlB,CAAlC,CAAD,CAAX;AACA,YAAMzB,EAAE,CAACwC,cAAH,CAAkBzC,IAAI,CAACqC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkCR,IAAI,CAACL,GAAvC,CAAlB,EAA+DM,OAA/D,CAAN;AAEAtB,MAAAA,KAAK,IAAI,CAAT;AACAhB,MAAAA,GAAG,CAAE,cAAaqC,IAAI,CAACL,GAAI,EAAxB,EAA2B,OAA3B,CAAH;AACD;AACF,GA5BK,EA4BH;AAAEgB,IAAAA,WAAW,EAAElC,MAAM,CAACkC;AAAtB,GA5BG,CAAN;AA8BA,SAAQ,cAAahC,KAAM,SAA3B;AACD,CA9DD",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst { log, getTarget, loadConfig, mkdir, to } = require('../../helpers')\nconst ignoreParser = require('gitignore-parser')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify')\n\nmodule.exports = async function (argv) {\n  let ignore = null\n  const config = await loadConfig()\n  const target = await getTarget(config, argv)\n\n  let total = 0\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8')\n    ignore = ignoreParser.compile(ignoreFile)\n  } catch (err) {}\n\n  const res = await requestify(target, {\n    method: 'get',\n    url: `/themes/${target.theme_id}/assets.json`\n  })\n  let assets = _.get(res, 'body.assets')\n\n  if (ignore) {\n    assets = _.reject(assets, function (asset) {\n      return ignore.denies(`theme/${asset.key}`)\n    })\n  }\n\n  if (filter) {\n    assets = _.filter(assets, function (asset) {\n      return filter.test(asset.key)\n    })\n  }\n\n  await Promise.map(assets, async function (asset) {\n    const res = await to(requestify(target, {\n      method: 'get',\n      url: `/themes/${target.theme_id}/assets.json`,\n      qs: {\n        'asset[key]': asset.key,\n        theme_id: target.theme_id\n      }\n    }))\n\n    if (res.isError) {\n      log(res, 'red')\n    } else {\n      const data = _.get(res, 'body.asset')\n      let rawData = null\n\n      if (data.attachment) {\n        rawData = Buffer.from(data.attachment, 'base64')\n      } else if (data.value) {\n        rawData = Buffer.from(data.value, 'utf8')\n      }\n\n      await mkdir(path.join(process.cwd(), 'theme', path.dirname(data.key)))\n      await fs.writeFileAsync(path.join(process.cwd(), 'theme', data.key), rawData)\n\n      total += 1\n      log(`Downloaded ${data.key}`, 'green')\n    }\n  }, { concurrency: config.concurrency })\n\n  return `Downloaded ${total} files.`\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579648307000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/upload.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/upload.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/theme/upload.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/upload.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
        "sourceFileName": "upload.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst {\n  log,\n  getTarget,\n  loadConfig,\n  to\n} = require('../../helpers');\n\nconst ignoreParser = require('gitignore-parser');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify');\n\nconst glob = require('glob');\n\nmodule.exports = async function (argv) {\n  let ignore = null;\n  const config = await loadConfig();\n  const target = await getTarget(config, argv);\n  let total = 0;\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null;\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8');\n    ignore = ignoreParser.compile(ignoreFile);\n  } catch (err) {}\n\n  let files = glob.sync('theme/**/*', {\n    nodir: true\n  });\n\n  if (ignore) {\n    files = _.reject(files, function (file) {\n      return ignore.denies(file);\n    });\n  }\n\n  if (filter) {\n    files = _.filter(files, function (file) {\n      const pathParts = file.split(path.sep);\n\n      const trimmedParts = _.drop(pathParts, _.lastIndexOf(pathParts, 'theme') + 1);\n\n      const key = trimmedParts.join('/');\n      return filter.test(key);\n    });\n  }\n\n  files = files.map(file => {\n    const pathParts = file.split(path.sep);\n\n    const trimmedParts = _.drop(pathParts, _.lastIndexOf(pathParts, 'theme') + 1);\n\n    const filepath = trimmedParts.join(path.sep);\n    return {\n      key: filepath,\n      name: path.basename(filepath),\n      path: file\n    };\n  });\n  await Promise.map(files, async function (file) {\n    const body = await fs.readFileAsync(file.path);\n    const res = await to(requestify(target, {\n      method: 'put',\n      url: `/themes/${target.theme_id}/assets.json`,\n      body: {\n        asset: {\n          key: file.key,\n          attachment: body.toString('base64')\n        }\n      }\n    }));\n\n    if (res.isError) {\n      log(res, 'red');\n    } else {\n      total += 1;\n      log(`uploaded ${file.key}`, 'green');\n    }\n  }, {\n    concurrency: config.concurrency\n  });\n  return `Uploaded ${total} files.`;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIlByb21pc2UiLCJsb2ciLCJnZXRUYXJnZXQiLCJsb2FkQ29uZmlnIiwidG8iLCJpZ25vcmVQYXJzZXIiLCJwYXRoIiwiZnMiLCJwcm9taXNpZnlBbGwiLCJyZXF1ZXN0aWZ5IiwiZ2xvYiIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd2IiwiaWdub3JlIiwiY29uZmlnIiwidGFyZ2V0IiwidG90YWwiLCJmaWx0ZXIiLCJSZWdFeHAiLCJpZ25vcmVGaWxlIiwicmVhZEZpbGVBc3luYyIsImNvbXBpbGUiLCJlcnIiLCJmaWxlcyIsInN5bmMiLCJub2RpciIsInJlamVjdCIsImZpbGUiLCJkZW5pZXMiLCJwYXRoUGFydHMiLCJzcGxpdCIsInNlcCIsInRyaW1tZWRQYXJ0cyIsImRyb3AiLCJsYXN0SW5kZXhPZiIsImtleSIsImpvaW4iLCJ0ZXN0IiwibWFwIiwiZmlsZXBhdGgiLCJuYW1lIiwiYmFzZW5hbWUiLCJib2R5IiwicmVzIiwibWV0aG9kIiwidXJsIiwidGhlbWVfaWQiLCJhc3NldCIsImF0dGFjaG1lbnQiLCJ0b1N0cmluZyIsImlzRXJyb3IiLCJjb25jdXJyZW5jeSJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWpCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQSxHQUFGO0FBQU9DLEVBQUFBLFNBQVA7QUFBa0JDLEVBQUFBLFVBQWxCO0FBQThCQyxFQUFBQTtBQUE5QixJQUFxQ0wsT0FBTyxDQUFDLGVBQUQsQ0FBbEQ7O0FBQ0EsTUFBTU0sWUFBWSxHQUFHTixPQUFPLENBQUMsa0JBQUQsQ0FBNUI7O0FBQ0EsTUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNUSxFQUFFLEdBQUdSLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBQyxPQUFPLENBQUNRLFlBQVIsQ0FBcUJELEVBQXJCOztBQUNBLE1BQU1FLFVBQVUsR0FBR1YsT0FBTyxDQUFDLGtCQUFELENBQTFCOztBQUNBLE1BQU1XLElBQUksR0FBR1gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixnQkFBZ0JDLElBQWhCLEVBQXNCO0FBQ3JDLE1BQUlDLE1BQU0sR0FBRyxJQUFiO0FBQ0EsUUFBTUMsTUFBTSxHQUFHLE1BQU1aLFVBQVUsRUFBL0I7QUFDQSxRQUFNYSxNQUFNLEdBQUcsTUFBTWQsU0FBUyxDQUFDYSxNQUFELEVBQVNGLElBQVQsQ0FBOUI7QUFFQSxNQUFJSSxLQUFLLEdBQUcsQ0FBWjtBQUNBLE1BQUlDLE1BQU0sR0FBR0wsSUFBSSxDQUFDSyxNQUFMLEdBQWMsSUFBSUMsTUFBSixDQUFZLElBQUdOLElBQUksQ0FBQ0ssTUFBTyxFQUEzQixDQUFkLEdBQThDLElBQTNEOztBQUVBLE1BQUk7QUFDRixVQUFNRSxVQUFVLEdBQUcsTUFBTWIsRUFBRSxDQUFDYyxhQUFILENBQWlCLG1CQUFqQixFQUFzQyxNQUF0QyxDQUF6QjtBQUNBUCxJQUFBQSxNQUFNLEdBQUdULFlBQVksQ0FBQ2lCLE9BQWIsQ0FBcUJGLFVBQXJCLENBQVQ7QUFDRCxHQUhELENBR0UsT0FBT0csR0FBUCxFQUFZLENBQUU7O0FBRWhCLE1BQUlDLEtBQUssR0FBR2QsSUFBSSxDQUFDZSxJQUFMLENBQVUsWUFBVixFQUF3QjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUF4QixDQUFaOztBQUVBLE1BQUlaLE1BQUosRUFBWTtBQUNWVSxJQUFBQSxLQUFLLEdBQUcxQixDQUFDLENBQUM2QixNQUFGLENBQVNILEtBQVQsRUFBZ0IsVUFBVUksSUFBVixFQUFnQjtBQUN0QyxhQUFPZCxNQUFNLENBQUNlLE1BQVAsQ0FBY0QsSUFBZCxDQUFQO0FBQ0QsS0FGTyxDQUFSO0FBR0Q7O0FBRUQsTUFBSVYsTUFBSixFQUFZO0FBQ1ZNLElBQUFBLEtBQUssR0FBRzFCLENBQUMsQ0FBQ29CLE1BQUYsQ0FBU00sS0FBVCxFQUFnQixVQUFVSSxJQUFWLEVBQWdCO0FBQ3RDLFlBQU1FLFNBQVMsR0FBR0YsSUFBSSxDQUFDRyxLQUFMLENBQVd6QixJQUFJLENBQUMwQixHQUFoQixDQUFsQjs7QUFDQSxZQUFNQyxZQUFZLEdBQUduQyxDQUFDLENBQUNvQyxJQUFGLENBQU9KLFNBQVAsRUFBbUJoQyxDQUFDLENBQUNxQyxXQUFGLENBQWNMLFNBQWQsRUFBeUIsT0FBekIsSUFBb0MsQ0FBdkQsQ0FBckI7O0FBQ0EsWUFBTU0sR0FBRyxHQUFHSCxZQUFZLENBQUNJLElBQWIsQ0FBa0IsR0FBbEIsQ0FBWjtBQUNBLGFBQU9uQixNQUFNLENBQUNvQixJQUFQLENBQVlGLEdBQVosQ0FBUDtBQUNELEtBTE8sQ0FBUjtBQU1EOztBQUVEWixFQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ2UsR0FBTixDQUFXWCxJQUFELElBQVU7QUFDMUIsVUFBTUUsU0FBUyxHQUFHRixJQUFJLENBQUNHLEtBQUwsQ0FBV3pCLElBQUksQ0FBQzBCLEdBQWhCLENBQWxCOztBQUNBLFVBQU1DLFlBQVksR0FBR25DLENBQUMsQ0FBQ29DLElBQUYsQ0FBT0osU0FBUCxFQUFtQmhDLENBQUMsQ0FBQ3FDLFdBQUYsQ0FBY0wsU0FBZCxFQUF5QixPQUF6QixJQUFvQyxDQUF2RCxDQUFyQjs7QUFDQSxVQUFNVSxRQUFRLEdBQUdQLFlBQVksQ0FBQ0ksSUFBYixDQUFrQi9CLElBQUksQ0FBQzBCLEdBQXZCLENBQWpCO0FBRUEsV0FBTztBQUNMSSxNQUFBQSxHQUFHLEVBQUVJLFFBREE7QUFFTEMsTUFBQUEsSUFBSSxFQUFFbkMsSUFBSSxDQUFDb0MsUUFBTCxDQUFjRixRQUFkLENBRkQ7QUFHTGxDLE1BQUFBLElBQUksRUFBRXNCO0FBSEQsS0FBUDtBQUtELEdBVk8sQ0FBUjtBQVlBLFFBQU01QixPQUFPLENBQUN1QyxHQUFSLENBQVlmLEtBQVosRUFBbUIsZ0JBQWdCSSxJQUFoQixFQUFzQjtBQUM3QyxVQUFNZSxJQUFJLEdBQUcsTUFBTXBDLEVBQUUsQ0FBQ2MsYUFBSCxDQUFpQk8sSUFBSSxDQUFDdEIsSUFBdEIsQ0FBbkI7QUFDQSxVQUFNc0MsR0FBRyxHQUFHLE1BQU14QyxFQUFFLENBQUNLLFVBQVUsQ0FBQ08sTUFBRCxFQUFTO0FBQ3RDNkIsTUFBQUEsTUFBTSxFQUFFLEtBRDhCO0FBRXRDQyxNQUFBQSxHQUFHLEVBQUcsV0FBVTlCLE1BQU0sQ0FBQytCLFFBQVMsY0FGTTtBQUd0Q0osTUFBQUEsSUFBSSxFQUFFO0FBQ0pLLFFBQUFBLEtBQUssRUFBRTtBQUNMWixVQUFBQSxHQUFHLEVBQUVSLElBQUksQ0FBQ1EsR0FETDtBQUVMYSxVQUFBQSxVQUFVLEVBQUVOLElBQUksQ0FBQ08sUUFBTCxDQUFjLFFBQWQ7QUFGUDtBQURIO0FBSGdDLEtBQVQsQ0FBWCxDQUFwQjs7QUFXQSxRQUFJTixHQUFHLENBQUNPLE9BQVIsRUFBaUI7QUFDZmxELE1BQUFBLEdBQUcsQ0FBQzJDLEdBQUQsRUFBTSxLQUFOLENBQUg7QUFDRCxLQUZELE1BRU87QUFDTDNCLE1BQUFBLEtBQUssSUFBSSxDQUFUO0FBQ0FoQixNQUFBQSxHQUFHLENBQUUsWUFBVzJCLElBQUksQ0FBQ1EsR0FBSSxFQUF0QixFQUF5QixPQUF6QixDQUFIO0FBQ0Q7QUFDRixHQW5CSyxFQW1CSDtBQUFFZ0IsSUFBQUEsV0FBVyxFQUFFckMsTUFBTSxDQUFDcUM7QUFBdEIsR0FuQkcsQ0FBTjtBQXFCQSxTQUFRLFlBQVduQyxLQUFNLFNBQXpCO0FBQ0QsQ0FoRUQiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL3F1aWNrc2hvdC9zcmMvY29tbWFuZHMvdGhlbWUvIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpXG5jb25zdCB7IGxvZywgZ2V0VGFyZ2V0LCBsb2FkQ29uZmlnLCB0byB9ID0gcmVxdWlyZSgnLi4vLi4vaGVscGVycycpXG5jb25zdCBpZ25vcmVQYXJzZXIgPSByZXF1aXJlKCdnaXRpZ25vcmUtcGFyc2VyJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuUHJvbWlzZS5wcm9taXNpZnlBbGwoZnMpXG5jb25zdCByZXF1ZXN0aWZ5ID0gcmVxdWlyZSgnLi4vLi4vcmVxdWVzdGlmeScpXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpXG5cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gKGFyZ3YpIHtcbiAgbGV0IGlnbm9yZSA9IG51bGxcbiAgY29uc3QgY29uZmlnID0gYXdhaXQgbG9hZENvbmZpZygpXG4gIGNvbnN0IHRhcmdldCA9IGF3YWl0IGdldFRhcmdldChjb25maWcsIGFyZ3YpXG5cbiAgbGV0IHRvdGFsID0gMFxuICB2YXIgZmlsdGVyID0gYXJndi5maWx0ZXIgPyBuZXcgUmVnRXhwKGBeJHthcmd2LmZpbHRlcn1gKSA6IG51bGxcblxuICB0cnkge1xuICAgIGNvbnN0IGlnbm9yZUZpbGUgPSBhd2FpdCBmcy5yZWFkRmlsZUFzeW5jKCcucXVpY2tzaG90LWlnbm9yZScsICd1dGY4JylcbiAgICBpZ25vcmUgPSBpZ25vcmVQYXJzZXIuY29tcGlsZShpZ25vcmVGaWxlKVxuICB9IGNhdGNoIChlcnIpIHt9XG5cbiAgbGV0IGZpbGVzID0gZ2xvYi5zeW5jKCd0aGVtZS8qKi8qJywgeyBub2RpcjogdHJ1ZSB9KVxuXG4gIGlmIChpZ25vcmUpIHtcbiAgICBmaWxlcyA9IF8ucmVqZWN0KGZpbGVzLCBmdW5jdGlvbiAoZmlsZSkge1xuICAgICAgcmV0dXJuIGlnbm9yZS5kZW5pZXMoZmlsZSlcbiAgICB9KVxuICB9XG5cbiAgaWYgKGZpbHRlcikge1xuICAgIGZpbGVzID0gXy5maWx0ZXIoZmlsZXMsIGZ1bmN0aW9uIChmaWxlKSB7XG4gICAgICBjb25zdCBwYXRoUGFydHMgPSBmaWxlLnNwbGl0KHBhdGguc2VwKVxuICAgICAgY29uc3QgdHJpbW1lZFBhcnRzID0gXy5kcm9wKHBhdGhQYXJ0cywgKF8ubGFzdEluZGV4T2YocGF0aFBhcnRzLCAndGhlbWUnKSArIDEpKVxuICAgICAgY29uc3Qga2V5ID0gdHJpbW1lZFBhcnRzLmpvaW4oJy8nKVxuICAgICAgcmV0dXJuIGZpbHRlci50ZXN0KGtleSlcbiAgICB9KVxuICB9XG5cbiAgZmlsZXMgPSBmaWxlcy5tYXAoKGZpbGUpID0+IHtcbiAgICBjb25zdCBwYXRoUGFydHMgPSBmaWxlLnNwbGl0KHBhdGguc2VwKVxuICAgIGNvbnN0IHRyaW1tZWRQYXJ0cyA9IF8uZHJvcChwYXRoUGFydHMsIChfLmxhc3RJbmRleE9mKHBhdGhQYXJ0cywgJ3RoZW1lJykgKyAxKSlcbiAgICBjb25zdCBmaWxlcGF0aCA9IHRyaW1tZWRQYXJ0cy5qb2luKHBhdGguc2VwKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGtleTogZmlsZXBhdGgsXG4gICAgICBuYW1lOiBwYXRoLmJhc2VuYW1lKGZpbGVwYXRoKSxcbiAgICAgIHBhdGg6IGZpbGVcbiAgICB9XG4gIH0pXG5cbiAgYXdhaXQgUHJvbWlzZS5tYXAoZmlsZXMsIGFzeW5jIGZ1bmN0aW9uIChmaWxlKSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IGZzLnJlYWRGaWxlQXN5bmMoZmlsZS5wYXRoKVxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRvKHJlcXVlc3RpZnkodGFyZ2V0LCB7XG4gICAgICBtZXRob2Q6ICdwdXQnLFxuICAgICAgdXJsOiBgL3RoZW1lcy8ke3RhcmdldC50aGVtZV9pZH0vYXNzZXRzLmpzb25gLFxuICAgICAgYm9keToge1xuICAgICAgICBhc3NldDoge1xuICAgICAgICAgIGtleTogZmlsZS5rZXksXG4gICAgICAgICAgYXR0YWNobWVudDogYm9keS50b1N0cmluZygnYmFzZTY0JylcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pKVxuXG4gICAgaWYgKHJlcy5pc0Vycm9yKSB7XG4gICAgICBsb2cocmVzLCAncmVkJylcbiAgICB9IGVsc2Uge1xuICAgICAgdG90YWwgKz0gMVxuICAgICAgbG9nKGB1cGxvYWRlZCAke2ZpbGUua2V5fWAsICdncmVlbicpXG4gICAgfVxuICB9LCB7IGNvbmN1cnJlbmN5OiBjb25maWcuY29uY3VycmVuY3kgfSlcblxuICByZXR1cm4gYFVwbG9hZGVkICR7dG90YWx9IGZpbGVzLmBcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "upload.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "log",
        "getTarget",
        "loadConfig",
        "to",
        "ignoreParser",
        "path",
        "fs",
        "promisifyAll",
        "requestify",
        "glob",
        "module",
        "exports",
        "argv",
        "ignore",
        "config",
        "target",
        "total",
        "filter",
        "RegExp",
        "ignoreFile",
        "readFileAsync",
        "compile",
        "err",
        "files",
        "sync",
        "nodir",
        "reject",
        "file",
        "denies",
        "pathParts",
        "split",
        "sep",
        "trimmedParts",
        "drop",
        "lastIndexOf",
        "key",
        "join",
        "test",
        "map",
        "filepath",
        "name",
        "basename",
        "body",
        "res",
        "method",
        "url",
        "theme_id",
        "asset",
        "attachment",
        "toString",
        "isError",
        "concurrency"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "sourcesContent": [
        "\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst { log, getTarget, loadConfig, to } = require('../../helpers')\nconst ignoreParser = require('gitignore-parser')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify')\nconst glob = require('glob')\n\nmodule.exports = async function (argv) {\n  let ignore = null\n  const config = await loadConfig()\n  const target = await getTarget(config, argv)\n\n  let total = 0\n  var filter = argv.filter ? new RegExp(`^${argv.filter}`) : null\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8')\n    ignore = ignoreParser.compile(ignoreFile)\n  } catch (err) {}\n\n  let files = glob.sync('theme/**/*', { nodir: true })\n\n  if (ignore) {\n    files = _.reject(files, function (file) {\n      return ignore.denies(file)\n    })\n  }\n\n  if (filter) {\n    files = _.filter(files, function (file) {\n      const pathParts = file.split(path.sep)\n      const trimmedParts = _.drop(pathParts, (_.lastIndexOf(pathParts, 'theme') + 1))\n      const key = trimmedParts.join('/')\n      return filter.test(key)\n    })\n  }\n\n  files = files.map((file) => {\n    const pathParts = file.split(path.sep)\n    const trimmedParts = _.drop(pathParts, (_.lastIndexOf(pathParts, 'theme') + 1))\n    const filepath = trimmedParts.join(path.sep)\n\n    return {\n      key: filepath,\n      name: path.basename(filepath),\n      path: file\n    }\n  })\n\n  await Promise.map(files, async function (file) {\n    const body = await fs.readFileAsync(file.path)\n    const res = await to(requestify(target, {\n      method: 'put',\n      url: `/themes/${target.theme_id}/assets.json`,\n      body: {\n        asset: {\n          key: file.key,\n          attachment: body.toString('base64')\n        }\n      }\n    }))\n\n    if (res.isError) {\n      log(res, 'red')\n    } else {\n      total += 1\n      log(`uploaded ${file.key}`, 'green')\n    }\n  }, { concurrency: config.concurrency })\n\n  return `Uploaded ${total} files.`\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578095395000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme/watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/theme/watch.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme/watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _awaitLock = _interopRequireDefault(require(\"await-lock\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _ = require('lodash');\n\nconst Promise = require('bluebird');\n\nconst moment = require('moment');\n\nconst {\n  log,\n  getTarget,\n  loadConfig,\n  to,\n  mkdir\n} = require('../../helpers');\n\nconst ignoreParser = require('gitignore-parser');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nPromise.promisifyAll(fs);\n\nconst requestify = require('../../requestify');\n\nconst chokidar = require('chokidar');\n\nmodule.exports = async function (argv) {\n  let ignore = null;\n  const config = await loadConfig();\n  const target = await getTarget(config, argv);\n  const lock = new _awaitLock.default();\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8');\n    ignore = ignoreParser.compile(ignoreFile);\n  } catch (err) {}\n\n  const watcher = chokidar.watch('./theme/', {\n    ignored: /[/\\\\]\\./,\n    persistent: true,\n    ignoreInitial: true,\n    usePolling: true,\n    interval: 300,\n    binaryInterval: 300,\n    cwd: process.cwd()\n  });\n  watcher.on('all', async function (event, filePath) {\n    if (argv.sync === true) {\n      await lock.acquireAsync();\n    }\n\n    try {\n      const pathParts = filePath.split(path.sep);\n\n      const trimmedParts = _.drop(pathParts, _.lastIndexOf(pathParts, 'theme') + 1);\n\n      const key = trimmedParts.join(path.sep);\n\n      if (!filePath.match(/^theme/)) {\n        return;\n      }\n\n      if (filePath.match(/^\\..*$/)) {\n        return;\n      }\n\n      if (filePath.match(/[()]/)) {\n        log(`Filename may not contain parentheses, please rename - \"${filePath}\"`, 'red');\n        return;\n      }\n\n      if (ignore && ignore.denies(filePath)) {\n        log(`IGNORING: ${filePath}`, 'yellow');\n        return;\n      }\n\n      if (['add', 'change'].includes(event)) {\n        let data = await fs.readFileAsync(filePath);\n        data = data.toString('base64');\n        await requestify(target, {\n          method: 'put',\n          url: `/themes/${target.theme_id}/assets.json`,\n          body: {\n            asset: {\n              key: key.split(path.sep).join('/'),\n              attachment: data\n            }\n          }\n        });\n        log(`Added/Updated ${filePath}`, 'green');\n      } else if (event === 'unlink') {\n        await requestify(target, {\n          method: 'delete',\n          url: `/themes/${target.theme_id}/assets.json?asset[key]=${key.split(path.sep).join('/')}`\n        });\n        log(`Deleted ${filePath}`, 'green');\n      }\n    } catch (err) {\n      log(err, 'red');\n    }\n\n    if (argv.sync === true) {\n      await lock.release();\n    }\n  });\n\n  if (argv.sync === true) {\n    log('Two-Way sync is enabled!', 'yellow');\n\n    const checkShopify = async function () {\n      await lock.acquireAsync();\n\n      try {\n        const res = await requestify(target, {\n          method: 'get',\n          url: `/themes/${target.theme_id}/assets.json`\n        });\n\n        const assets = _.get(res, 'body.assets');\n\n        Promise.map(assets, async function (asset) {\n          const stat = await to(fs.statAsync(path.join('theme', asset.key)));\n          let fileExists = true;\n\n          if (stat.isError && stat.code === 'ENOENT') {\n            fileExists = false;\n          }\n\n          const key = asset.key;\n          const localMtime = moment(stat.mtime).toDate();\n          const remoteMtime = moment(asset.updated_at).toDate();\n          const localSize = stat.size;\n          const remoteSize = asset.size;\n\n          if (fileExists) {\n            if (localSize === remoteSize) {\n              return;\n            }\n\n            if (localMtime > remoteMtime) {\n              return;\n            }\n          }\n\n          const res = await requestify(target, {\n            method: 'get',\n            url: `/themes/${target.theme_id}/assets.json`,\n            qs: {\n              'asset[key]': key,\n              theme_id: target.theme_id\n            }\n          });\n\n          const data = _.get(res, 'body.asset');\n\n          if (data.value === 'null') {\n            return;\n          }\n\n          let rawData = null;\n\n          if (data.attachment) {\n            rawData = Buffer.from(data.attachment, 'base64');\n          } else if (data.value) {\n            rawData = Buffer.from(data.value, 'utf8');\n          }\n\n          await mkdir(path.join(process.cwd(), 'theme', path.dirname(data.key)));\n          await fs.writeFileAsync(path.join(process.cwd(), 'theme', data.key), rawData);\n          log(`Downloaded ${key}`, 'green');\n        }, {\n          concurrency: 1\n        });\n      } catch (err) {\n        log(err, 'red');\n      }\n\n      await lock.release();\n      setTimeout(checkShopify, 3000);\n    };\n\n    setTimeout(checkShopify, 100);\n  }\n\n  log('watching theme...', 'green');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "_",
        "require",
        "Promise",
        "moment",
        "log",
        "getTarget",
        "loadConfig",
        "to",
        "mkdir",
        "ignoreParser",
        "path",
        "fs",
        "promisifyAll",
        "requestify",
        "chokidar",
        "module",
        "exports",
        "argv",
        "ignore",
        "config",
        "target",
        "lock",
        "AwaitLock",
        "ignoreFile",
        "readFileAsync",
        "compile",
        "err",
        "watcher",
        "watch",
        "ignored",
        "persistent",
        "ignoreInitial",
        "usePolling",
        "interval",
        "binaryInterval",
        "cwd",
        "process",
        "on",
        "event",
        "filePath",
        "sync",
        "acquireAsync",
        "pathParts",
        "split",
        "sep",
        "trimmedParts",
        "drop",
        "lastIndexOf",
        "key",
        "join",
        "match",
        "denies",
        "includes",
        "data",
        "toString",
        "method",
        "url",
        "theme_id",
        "body",
        "asset",
        "attachment",
        "release",
        "checkShopify",
        "res",
        "assets",
        "get",
        "map",
        "stat",
        "statAsync",
        "fileExists",
        "isError",
        "code",
        "localMtime",
        "mtime",
        "toDate",
        "remoteMtime",
        "updated_at",
        "localSize",
        "size",
        "remoteSize",
        "qs",
        "value",
        "rawData",
        "Buffer",
        "from",
        "dirname",
        "writeFileAsync",
        "concurrency",
        "setTimeout"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/theme/",
      "sourcesContent": [
        "\nimport AwaitLock from 'await-lock'\n\nconst _ = require('lodash')\nconst Promise = require('bluebird')\nconst moment = require('moment')\nconst { log, getTarget, loadConfig, to, mkdir } = require('../../helpers')\nconst ignoreParser = require('gitignore-parser')\nconst path = require('path')\nconst fs = require('fs')\nPromise.promisifyAll(fs)\nconst requestify = require('../../requestify')\nconst chokidar = require('chokidar')\n\nmodule.exports = async function (argv) {\n  let ignore = null\n  const config = await loadConfig()\n  const target = await getTarget(config, argv)\n\n  const lock = new AwaitLock()\n\n  try {\n    const ignoreFile = await fs.readFileAsync('.quickshot-ignore', 'utf8')\n    ignore = ignoreParser.compile(ignoreFile)\n  } catch (err) {}\n\n  const watcher = chokidar.watch('./theme/', {\n    ignored: /[/\\\\]\\./,\n    persistent: true,\n    ignoreInitial: true,\n    usePolling: true,\n    interval: 300,\n    binaryInterval: 300,\n    cwd: process.cwd()\n  })\n\n  watcher.on('all', async function (event, filePath) {\n    if (argv.sync === true) { await lock.acquireAsync() }\n    try {\n      const pathParts = filePath.split(path.sep)\n      const trimmedParts = _.drop(pathParts, (_.lastIndexOf(pathParts, 'theme') + 1))\n      const key = trimmedParts.join(path.sep)\n\n      if (!filePath.match(/^theme/)) { return }\n      if (filePath.match(/^\\..*$/)) { return }\n      if (filePath.match(/[()]/)) {\n        log(`Filename may not contain parentheses, please rename - \"${filePath}\"`, 'red')\n        return\n      }\n\n      if (ignore && ignore.denies(filePath)) {\n        log(`IGNORING: ${filePath}`, 'yellow')\n        return\n      }\n\n      if (['add', 'change'].includes(event)) {\n        let data = await fs.readFileAsync(filePath)\n        data = data.toString('base64')\n\n        await requestify(target, {\n          method: 'put',\n          url: `/themes/${target.theme_id}/assets.json`,\n          body: {\n            asset: {\n              key: key.split(path.sep).join('/'),\n              attachment: data\n            }\n          }\n        })\n\n        log(`Added/Updated ${filePath}`, 'green')\n      } else if (event === 'unlink') {\n        await requestify(target, {\n          method: 'delete',\n          url: `/themes/${target.theme_id}/assets.json?asset[key]=${key.split(path.sep).join('/')}`\n        })\n\n        log(`Deleted ${filePath}`, 'green')\n      }\n    } catch (err) {\n      log(err, 'red')\n    }\n    if (argv.sync === true) { await lock.release() }\n  })\n\n  if (argv.sync === true) {\n    log('Two-Way sync is enabled!', 'yellow')\n\n    const checkShopify = async function () {\n      await lock.acquireAsync()\n      try {\n        const res = await requestify(target, {\n          method: 'get',\n          url: `/themes/${target.theme_id}/assets.json`\n        })\n        const assets = _.get(res, 'body.assets')\n\n        Promise.map(assets, async function (asset) {\n          const stat = await to(fs.statAsync(path.join('theme', asset.key)))\n          let fileExists = true\n\n          if (stat.isError && stat.code === 'ENOENT') {\n            fileExists = false\n          }\n\n          const key = asset.key\n          const localMtime = moment(stat.mtime).toDate()\n          const remoteMtime = moment(asset.updated_at).toDate()\n          const localSize = stat.size\n          const remoteSize = asset.size\n\n          if (fileExists) {\n            if (localSize === remoteSize) {\n              return\n            }\n\n            if (localMtime > remoteMtime) {\n              return\n            }\n          }\n\n          const res = await requestify(target, {\n            method: 'get',\n            url: `/themes/${target.theme_id}/assets.json`,\n            qs: {\n              'asset[key]': key,\n              theme_id: target.theme_id\n            }\n          })\n          const data = _.get(res, 'body.asset')\n\n          if (data.value === 'null') {\n            return\n          }\n\n          let rawData = null\n\n          if (data.attachment) {\n            rawData = Buffer.from(data.attachment, 'base64')\n          } else if (data.value) {\n            rawData = Buffer.from(data.value, 'utf8')\n          }\n\n          await mkdir(path.join(process.cwd(), 'theme', path.dirname(data.key)))\n          await fs.writeFileAsync(path.join(process.cwd(), 'theme', data.key), rawData)\n\n          log(`Downloaded ${key}`, 'green')\n        }, { concurrency: 1 })\n      } catch (err) {\n        log(err, 'red')\n      }\n      await lock.release()\n      setTimeout(checkShopify, 3000)\n    }\n\n    setTimeout(checkShopify, 100)\n  }\n\n  log('watching theme...', 'green')\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578097739000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/quickshot/src/commands/\",\"cwd\":\"/usr/local/lib/node_modules/quickshot/src\",\"caller\":{\"name\":\"@babel/register\"},\"filename\":\"/usr/local/lib/node_modules/quickshot/src/commands/theme.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/local/lib/node_modules/quickshot/src\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "cwd": "/usr/local/lib/node_modules/quickshot/src",
      "caller": {
        "name": "@babel/register"
      },
      "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/local/lib/node_modules/quickshot/src",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/quickshot/src/commands/theme.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/quickshot/src/commands/theme.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
        "sourceFileName": "theme.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// let _ = require('lodash')\nconst path = require('path');\n\nconst requireAll = require('require-all');\n/* global VERSION */\n\n\nvar HELPTEXT = `\n\n    Quickshot theme ${VERSION}\n    ==============================\n\n    Commands:\n      quickshot theme upload [options]              Upload theme files\n      quickshot theme download [options]            Download theme files\n      quickshot theme watch [options]               Watch theme folder, compile and synchronize changes automatically\n      quickshot theme                               Show this screen.\n\n    Options:\n      --target=[targetname]                         Explicitly select target for upload/download/watch\n      --filter=[filter]                             Filter files for upload/download\n      --sync                                        Enable experimental two-way sync for watch\n\n`;\n\nmodule.exports = async function (argv) {\n  const command = argv._.shift();\n\n  const commands = requireAll({\n    dirname: path.join(__dirname, 'theme')\n  });\n\n  if (commands[command] == null) {\n    console.log(HELPTEXT);\n  } else {\n    return commands[command](argv);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZW1lLmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwicmVxdWlyZUFsbCIsIkhFTFBURVhUIiwiVkVSU0lPTiIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd2IiwiY29tbWFuZCIsIl8iLCJzaGlmdCIsImNvbW1hbmRzIiwiZGlybmFtZSIsImpvaW4iLCJfX2Rpcm5hbWUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0EsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCO0FBRUE7OztBQUVBLElBQUlFLFFBQVEsR0FBSTs7c0JBRU1DLE9BQVE7Ozs7Ozs7Ozs7Ozs7O0NBRjlCOztBQWtCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLGdCQUFnQkMsSUFBaEIsRUFBc0I7QUFDckMsUUFBTUMsT0FBTyxHQUFHRCxJQUFJLENBQUNFLENBQUwsQ0FBT0MsS0FBUCxFQUFoQjs7QUFFQSxRQUFNQyxRQUFRLEdBQUdULFVBQVUsQ0FBQztBQUMxQlUsSUFBQUEsT0FBTyxFQUFFWixJQUFJLENBQUNhLElBQUwsQ0FBVUMsU0FBVixFQUFxQixPQUFyQjtBQURpQixHQUFELENBQTNCOztBQUlBLE1BQUlILFFBQVEsQ0FBQ0gsT0FBRCxDQUFSLElBQXFCLElBQXpCLEVBQStCO0FBQzdCTyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWIsUUFBWjtBQUNELEdBRkQsTUFFTztBQUNMLFdBQU9RLFFBQVEsQ0FBQ0gsT0FBRCxDQUFSLENBQWtCRCxJQUFsQixDQUFQO0FBQ0Q7QUFDRixDQVpEIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9xdWlja3Nob3Qvc3JjL2NvbW1hbmRzLyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gbGV0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKVxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuY29uc3QgcmVxdWlyZUFsbCA9IHJlcXVpcmUoJ3JlcXVpcmUtYWxsJylcblxuLyogZ2xvYmFsIFZFUlNJT04gKi9cblxudmFyIEhFTFBURVhUID0gYFxuXG4gICAgUXVpY2tzaG90IHRoZW1lICR7VkVSU0lPTn1cbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAgIENvbW1hbmRzOlxuICAgICAgcXVpY2tzaG90IHRoZW1lIHVwbG9hZCBbb3B0aW9uc10gICAgICAgICAgICAgIFVwbG9hZCB0aGVtZSBmaWxlc1xuICAgICAgcXVpY2tzaG90IHRoZW1lIGRvd25sb2FkIFtvcHRpb25zXSAgICAgICAgICAgIERvd25sb2FkIHRoZW1lIGZpbGVzXG4gICAgICBxdWlja3Nob3QgdGhlbWUgd2F0Y2ggW29wdGlvbnNdICAgICAgICAgICAgICAgV2F0Y2ggdGhlbWUgZm9sZGVyLCBjb21waWxlIGFuZCBzeW5jaHJvbml6ZSBjaGFuZ2VzIGF1dG9tYXRpY2FsbHlcbiAgICAgIHF1aWNrc2hvdCB0aGVtZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgc2NyZWVuLlxuXG4gICAgT3B0aW9uczpcbiAgICAgIC0tdGFyZ2V0PVt0YXJnZXRuYW1lXSAgICAgICAgICAgICAgICAgICAgICAgICBFeHBsaWNpdGx5IHNlbGVjdCB0YXJnZXQgZm9yIHVwbG9hZC9kb3dubG9hZC93YXRjaFxuICAgICAgLS1maWx0ZXI9W2ZpbHRlcl0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZpbHRlciBmaWxlcyBmb3IgdXBsb2FkL2Rvd25sb2FkXG4gICAgICAtLXN5bmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRW5hYmxlIGV4cGVyaW1lbnRhbCB0d28td2F5IHN5bmMgZm9yIHdhdGNoXG5cbmBcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyBmdW5jdGlvbiAoYXJndikge1xuICBjb25zdCBjb21tYW5kID0gYXJndi5fLnNoaWZ0KClcblxuICBjb25zdCBjb21tYW5kcyA9IHJlcXVpcmVBbGwoe1xuICAgIGRpcm5hbWU6IHBhdGguam9pbihfX2Rpcm5hbWUsICd0aGVtZScpXG4gIH0pXG5cbiAgaWYgKGNvbW1hbmRzW2NvbW1hbmRdID09IG51bGwpIHtcbiAgICBjb25zb2xlLmxvZyhIRUxQVEVYVClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY29tbWFuZHNbY29tbWFuZF0oYXJndilcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "theme.js"
      ],
      "names": [
        "path",
        "require",
        "requireAll",
        "HELPTEXT",
        "VERSION",
        "module",
        "exports",
        "argv",
        "command",
        "_",
        "shift",
        "commands",
        "dirname",
        "join",
        "__dirname",
        "console",
        "log"
      ],
      "mappings": ";;AACA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;AAEA;;;AAEA,IAAIE,QAAQ,GAAI;;sBAEMC,OAAQ;;;;;;;;;;;;;;CAF9B;;AAkBAC,MAAM,CAACC,OAAP,GAAiB,gBAAgBC,IAAhB,EAAsB;AACrC,QAAMC,OAAO,GAAGD,IAAI,CAACE,CAAL,CAAOC,KAAP,EAAhB;;AAEA,QAAMC,QAAQ,GAAGT,UAAU,CAAC;AAC1BU,IAAAA,OAAO,EAAEZ,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqB,OAArB;AADiB,GAAD,CAA3B;;AAIA,MAAIH,QAAQ,CAACH,OAAD,CAAR,IAAqB,IAAzB,EAA+B;AAC7BO,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACD,GAFD,MAEO;AACL,WAAOQ,QAAQ,CAACH,OAAD,CAAR,CAAkBD,IAAlB,CAAP;AACD;AACF,CAZD",
      "sourceRoot": "/usr/local/lib/node_modules/quickshot/src/commands/",
      "sourcesContent": [
        "\n// let _ = require('lodash')\nconst path = require('path')\nconst requireAll = require('require-all')\n\n/* global VERSION */\n\nvar HELPTEXT = `\n\n    Quickshot theme ${VERSION}\n    ==============================\n\n    Commands:\n      quickshot theme upload [options]              Upload theme files\n      quickshot theme download [options]            Download theme files\n      quickshot theme watch [options]               Watch theme folder, compile and synchronize changes automatically\n      quickshot theme                               Show this screen.\n\n    Options:\n      --target=[targetname]                         Explicitly select target for upload/download/watch\n      --filter=[filter]                             Filter files for upload/download\n      --sync                                        Enable experimental two-way sync for watch\n\n`\n\nmodule.exports = async function (argv) {\n  const command = argv._.shift()\n\n  const commands = requireAll({\n    dirname: path.join(__dirname, 'theme')\n  })\n\n  if (commands[command] == null) {\n    console.log(HELPTEXT)\n  } else {\n    return commands[command](argv)\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578095539000
  }
}